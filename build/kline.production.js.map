{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/internal/ViewPortHandler.js","webpack:///./src/internal/DataBounds.js","webpack:///./src/chart/Chart.js","webpack:///./src/chart/GridChart.js","webpack:///./src/utils/utils.js","webpack:///./src/chart/AxisChart.js","webpack:///./src/component/Indicator.js","webpack:///./src/component/Component.js","webpack:///./src/component/Axis.js","webpack:///./src/component/YAxis.js","webpack:///./src/chart/YAxisChart.js","webpack:///./src/chart/IndicatorChart.js","webpack:///./src/component/Candle.js","webpack:///./src/chart/CandleChart.js","webpack:///./src/chart/XAxisChart.js","webpack:///./src/component/Tooltip.js","webpack:///./src/chart/TooltipChart.js","webpack:///./src/component/XAxis.js","webpack:///./src/component/Grid.js","webpack:///./src/internal/event/Event.js","webpack:///./src/internal/event/MouseEvent.js","webpack:///./src/internal/event/TouchEvent.js","webpack:///./src/utils/indicatorCalculation.js","webpack:///./src/chart/KLineChart.js","webpack:///./src/kline.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ViewPortHandler","constructor","this","contentRect","left","right","top","bottom","viewHeight","viewWidth","setChartDimens","width","height","restrainViewPort","contentLeft","contentTop","contentRight","contentBottom","offsetLeft","offsetTop","offsetRight","offsetBottom","getContentCenter","point","x","y","isInBoundsX","isInBoundsLeft","isInBoundsRight","tx","parseInt","DataBounds","viewPortHandler","dataList","min","range","maxRange","minRange","dataSpace","dataMarginSpaceRate","currentDataPos","space","moveToLast","length","calcCurrentDataIndex","Math","ceil","toFixed","Chart","dataBounds","chartTop","chartHeight","getY","yValue","yMin","interval","GridChart","grid","super","draw","canvas","display","strokeStyle","lineColor","lineWidth","lineSize","beginPath","moveTo","lineTo","stroke","closePath","utils","document","createElement","getContext","formatDate","timestamp","date","Date","month","getMonth","toString","day","getDate","hours","getHours","minutes","getMinutes","calcTextWidth","font","text","measureText","nice","exponent","floor","log","exp10","pow","f","nf","getIntervalPrecision","str","eIndex","indexOf","precision","slice","dotIndex","round","max","AxisChart","values","valueCount","computeAxisValues","span","first","last","IndicatorType","NO","MA","VOL","MACD","BOLL","KDJ","KD","RSI","BIAS","BRAR","CCI","DMI","CR","PSY","DMA","TRIX","OBV","VR","WR","MTM","EMV","SAR","Indicator","increasingColor","decreasingColor","lineColors","LineStyle","DASH","SOLID","Axis","color","axisLine","size","tickText","position","YAxisTextPosition","OUTSIDE","margin","valueFormatter","tickLine","separatorLine","style","dashValue","YAxisPosition","LEFT","RIGHT","INSIDE","YAxis","yAxisPosition","yAxisMaxWidth","yAxisMinWidth","needsOffset","getRequiredWidthSpace","maxWidth","YAxisChart","yAxis","axisMaximum","axisMinimum","axisRange","drawAxisLine","drawAxisLabels","initX","fillStyle","labelHeight","halfLabelHeight","formatter","labelY","getValueY","label","checkShowLabel","textAlign","startY","fillText","drawSeparatorLines","xAxis","setLineDash","drawTickLines","startX","endX","getYAxisDataMinMax","indicatorType","isMainChart","isTimeLine","minMaxArray","Number","MAX_VALUE","MIN_VALUE","model","averagePrice","close","calcIndexMinMax","low","high","computeAxis","indexType","ma","ma5","ma10","ma20","ma60","macd","dea","diff","vol","num","boll","up","mid","dn","bias","bias1","bias2","bias3","brar","br","ar","cci","cr","ma1","ma2","ma3","ma4","dma","dif","difMa","dmi","pdi","mdi","adx","adxr","kdj","k","j","rsi","rsi1","rsi2","rsi3","psy","trix","maTrix","obv","maObv","vr","maVr","wr","wr1","wr2","wr3","mtm","mtmMa","emv","maEmv","sar","abs","IndicatorChart","indicator","yAxisChart","drawChartHorizontalSeparatorLine","drawIndicator","isMainIndicator","drawLines","drawBarLines","kLineModel","preKLineModel","barBuffer","preMacd","strokeRect","fillRect","preClose","halfSpace","drawOhlc","drawSar","save","rect","clip","halfBarSpace","dataY","arc","PI","restore","dataKey","barDataKey","lineDataKeys","drawRect","lineValues","data","barData","zeroY","valueY","push","drawLine","openY","open","closeY","highY","lowY","drawOhlcLines","isDisplayChart","CandleStyle","STROKE","INCREASING_STROKE","DECREASING_STROKE","OHLC","ChartStyle","CANDLE","TIME_LINE","Candle","chartStyle","timeChart","timeLineSize","timeLineColor","timeLineFillColor","timeAverageLineColor","candleChart","candleStyle","lowestHighestPriceMarkTextColor","lowestHighestPriceMarkTextSize","lowestHighestValueFormatter","highestPriceMark","textSize","lowestPriceMark","lastPriceMark","lineStyle","CandleChart","candle","highestMarkData","lowestMarkData","isTimeLineChart","drawTimeLine","drawCandle","drawHighestPriceMark","drawLowestPriceMark","drawLastPriceMark","kLineDataList","candleSpace","markHighestPrice","markHighestPriceX","markLowestPrice","markLowestPriceX","highLine","lowLine","price","drawLowestHighestPriceMark","isHigh","priceY","lastPrice","timeLinePoints","timeLineAreaPoints","averageLinePoints","averagePriceY","fill","XAxisChart","positions","pointValuesToPixel","endY","pos","dataMin","IndicatorDisplayRule","ALWAYS","FOLLOW_CROSS","NONE","Tooltip","crossLine","rectStrokeLineSize","rectStrokeLineColor","rectFillColor","generalData","labels","indicatorData","displayRule","TooltipChart","tooltip","volChart","indicatorChart","displayCross","crossPoint","yAxisLabelStrokePathPoints","drawCrossHorizontalLine","drawCrossVerticalLine","textHeight","drawGeneralDataTooltip","drawIndicatorTooltip","yAxisDataLabel","getCrossYAxisLabel","labelStartX","isDrawYAxisTextOutside","yAxisDataLabelWidth","labelStartY","lineStartX","lineEndX","centerPoint","crossTextMarginSpace","candleChartYAxis","candleChartHeight","candleChartTop","volChartYAxis","volChartHeight","volChartTop","indicatorChartYAxis","indicatorChartHeight","indicatorChartTop","eventY","candleChartYAxisDataMin","yData","volIndicatorChartYAxisDataMin","indicatorChartYAxisDataMin","labelWidth","xAxisLabelX","rectLeft","rectTop","rectRight","rectBottom","textColor","time","textWidth","maData","drawIndicatorTooltipLabels","macdData","volData","bollData","biasData","brarData","cciData","crData","dmaData","dmiData","kdjData","rsiData","psyData","trixData","obvData","vrModel","wrModel","mtmModel","emvModel","sarModel","labelX","valueStr","setCross","XAxis","xAxisMaxHeight","xAxisMinHeight","getRequiredHeightSpace","maxHeight","Grid","Event","kline","isValidEvent","CROSS","DRAG","MouseEvent","mouseMode","mouseDownPoint","mouseDown","e","getCanvasPoint","tooltipChart","freshen","mouseUp","mouseLeave","mouseMove","moveDist","moveRange","mouseWheel","touchStartPosition","touchRange","scaleX","wheelDelta","detail","canvasDom","getBoundingClientRect","clientX","clientY","TOUCH_NO","TOUCH_DRAG","TOUCH_ZOOM","TOUCH_POST_ZOOM","TOUCH_CROSS","TOUCH_CROSS_CANCEL","TouchEvent","touchMode","touchStartPoint","touchMovePoint","touchCrossPoint","savedDist","savedXDist","delayTimeout","delayActiveCross","touchStart","targetTouches","preventDefault","distance","performCross","removeDelayActiveCross","postDelayDelayActiveCross","spacing","getXDist","touchMove","performZoom","performDrag","distanceX","touchEnd","setTimeout","clearTimeout","eventX","dx","dy","sqrt","calculationKdj","ln","hn","totalTurnover","totalVolume","turnover","volume","cn","getLow","getHigh","rsv","getBollMd","list","sum","closeMa","b","md","isMobile","test","navigator","userAgent","KLineChart","dom","rootDom","domWidth","domHeight","gridChart","xAxisChart","motionEvent","isShouldCalcOffset","isShouldCalcChartHeight","init","addEventListener","appendChild","resize","offsetWidth","offsetHeight","setConfig","config","common","minVisibleRange","maxVisibleRange","defaultVisibleRange","chartType","minHeight","minWidth","calcChartHeight","xChartHeight","isDisplayVolChart","isDisplayIndicatorChart","calcOffsets","yAxisRequireWidthSpace","calcIndicator","ma5Num","ma10Num","ma20Num","ma60Num","IndicatorCalculation","ema12","ema26","oldEma12","oldEma26","oldDea","closePrice","ma5s","ma10s","ma20s","mb","closes26","closes25","closes1","closes2","closes3","mean6","mean12","mean24","hcy","cyl","ho","ol","highestPrice","lowestPrice","openPrice","preClosePrice","highSubPreClose","preCloseSubLow","TYPEs","TYP","TYPEsMean","types","typ","MD","ma40","p1","p2","ma10Sum","ma10List","ma20Sum","ma20List","ma40Sum","ma40List","ma60Sum","ma60List","preHighestPrice","preLowestPrice","preMidPrice","highSubPreMid","preMidSubLow","firstMidPrice","secondHighestPrice","secondLowestPrice","secondHighSubFirstMid","firstMidSubSecondLow","YM","HYM","LYM","ma50","ma50s","dif10s","HD","LD","refClose","sumMax","sumMaxDmp","sumMaxDmm","sumAdx","sumAdxr","H","L","max1","max2","sumMax1","sumMaxDmp1","sumMaxDmm1","adxN1","sum1","remove","a1","b1","a2","b2","a3","b3","sumCloseA","sumCloseB","oldA1","oldB1","oldA2","oldB2","oldA3","oldB3","tmp","AA","BB","upDay","emaClose","ema2","ema3","sumTrix","sumClose","oldEmaClose","sumEmaClose","oldEma2","sumEma2","oldEma3","sumObv","highSubClose","avs","bvs","cvs","sumVr","v","wr1HighestPrice","wr1LowestPrice","wr2HighestPrice","wr2LowestPrice","wr3HighestPrice","wr3LowestPrice","highPrice","lowPrice","highSubLow","mtmSum","sumEmv","em","emList","af","ep","isIncreasing","preSar","lowestPriceMin","highestPriceMax","calcChartIndicator","setDataList","setMainIndicatorType","setSubIndicatorType","shouldCalcChartHeight","setShowVolIndicatorChart","isShow","__webpack_exports__"],"mappings":"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","file":"kline.production.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class ViewPortHandler {\n  constructor () {\n    // 绘制区域参数\n    this.contentRect = {\n      left: 0, right: 0, top: 0, bottom: 0\n    }\n    // 整个view的高度\n    this.viewHeight = 0\n    // 整个view的宽度\n    this.viewWidth = 0\n  }\n\n  /**\n   * 设置尺寸\n   * @param width\n   * @param height\n   */\n  setChartDimens (width, height) {\n    this.viewWidth = width\n    this.viewHeight = height\n    this.restrainViewPort(\n      this.contentLeft(),\n      this.contentTop(),\n      width - this.contentRight(),\n      height - this.contentBottom()\n    )\n  }\n\n  restrainViewPort (offsetLeft, offsetTop, offsetRight, offsetBottom) {\n    this.contentRect.left = offsetLeft\n    this.contentRect.right = this.viewWidth - offsetRight\n    this.contentRect.top = offsetTop\n    this.contentRect.bottom = this.viewHeight - offsetBottom\n  }\n\n  contentTop () {\n    return this.contentRect.top\n  }\n\n  contentLeft () {\n    return this.contentRect.left\n  }\n\n  contentRight () {\n    return this.contentRect.right\n  }\n\n  contentBottom () {\n    return this.contentRect.bottom\n  }\n\n  /**\n   * 获取中间点坐标\n   */\n  getContentCenter () {\n    let point = {}\n    point.x = (this.contentRect.left + this.contentRect.right) / 2\n    point.y = (this.contentRect.top + this.contentRect.bottom) / 2\n    return point\n  }\n\n  isInBoundsX (x) {\n    return this.isInBoundsLeft(x) && this.isInBoundsRight(x)\n  }\n\n  isInBoundsLeft (x) {\n    return this.contentRect.left <= x + 1\n  }\n\n  isInBoundsRight (x) {\n    let tx = (parseInt(x * 100)) / 100\n    return this.contentRect.right >= tx - 1\n  }\n}\n\nexport default ViewPortHandler\n","class DataBounds {\n  constructor (viewPortHandler) {\n    this.viewPortHandler = viewPortHandler\n    // 数据源\n    this.dataList = []\n    // 数据绘制起始位置\n    this.min = 0\n    // 绘制的数据条数\n    this.range = 120\n    // 最大绘制条数\n    this.maxRange = 180\n    // 最小绘制条数\n    this.minRange = 20\n    // 没条数据的所占的空间\n    this.dataSpace = 0\n    // 每条数据之间的距离比例\n    this.dataMarginSpaceRate = 0.2\n    // 当前数据的位置\n    this.currentDataPos = 0\n  }\n\n  /**\n   * 获取柱状图之间的间隙\n   */\n  space () {\n    this.dataSpace = (this.viewPortHandler.contentRight() - this.viewPortHandler.contentLeft()) / this.range\n  }\n\n  moveToLast () {\n    if (this.dataList.length > this.range) {\n      this.min = this.dataList.length - this.range\n      this.currentDataPos = this.dataList.length - 1\n    } else {\n      this.min = 0\n    }\n  }\n\n  /**\n   * 计算当前数据的索引\n   * @param x\n   */\n  calcCurrentDataIndex (x) {\n    let range = +Math.ceil(x / this.dataSpace).toFixed(0)\n    this.currentDataPos = this.min + range - 1\n  }\n}\n\nexport default DataBounds\n","class Chart {\n  constructor (dataBounds, viewPortHandler) {\n    this.dataBounds = dataBounds\n    this.viewPortHandler = viewPortHandler\n    this.chartTop = 0\n    this.chartHeight = 0\n  }\n\n  /**\n   * 设置图尺寸\n   * @param height\n   * @param top\n   */\n  setChartDimens (height, top) {\n    this.chartHeight = height\n    this.chartTop = top\n  }\n\n  /**\n   * 获取y点坐标\n   * @param yValue\n   * @param yMin\n   * @param interval\n   * @returns {number}\n   */\n  getY (yValue, yMin, interval) {\n    return this.chartTop + (1 - (yValue - yMin) / interval) * this.chartHeight\n  }\n}\n\nexport default Chart\n","import Chart from './Chart'\n\nclass GridChart extends Chart {\n  constructor (grid, dataBounds, viewPortHandler) {\n    super(dataBounds, viewPortHandler)\n    this.grid = grid\n  }\n\n  draw (canvas) {\n    if (!this.grid.display) {\n      return\n    }\n    canvas.strokeStyle = this.grid.lineColor\n    canvas.lineWidth = this.grid.lineSize\n    canvas.beginPath()\n    canvas.moveTo(this.viewPortHandler.contentLeft(), this.viewPortHandler.contentTop())\n    canvas.lineTo(this.viewPortHandler.contentRight(), this.viewPortHandler.contentTop())\n    canvas.lineTo(this.viewPortHandler.contentRight(), this.viewPortHandler.contentBottom())\n    canvas.lineTo(this.viewPortHandler.contentLeft(), this.viewPortHandler.contentBottom())\n    canvas.lineTo(this.viewPortHandler.contentLeft(), this.viewPortHandler.contentTop())\n    canvas.stroke()\n    canvas.closePath()\n  }\n}\n\nexport default GridChart\n","const utils = {\n  canvas: document.createElement('canvas').getContext('2d'),\n\n  formatDate (timestamp) {\n    let date = new Date(timestamp)\n    let month = (date.getMonth() + 1).toString()\n    let day = date.getDate().toString()\n    let hours = date.getHours().toString()\n    let minutes = date.getMinutes().toString()\n    return (month.length === 1 ? '0' + month : month) +\n      '-' + (day.length === 1 ? '0' + day : day) +\n      ' ' + (hours.length === 1 ? '0' + hours : hours) +\n      ':' + (minutes.length === 1 ? '0' + minutes : minutes)\n  },\n\n  /**\n   * 测量文字的宽度\n   * @param font\n   * @param text\n   * @returns {number}\n   */\n  calcTextWidth (font, text) {\n    this.canvas.font = font\n    return this.canvas.measureText(text).width\n  },\n\n  nice (value) {\n    let exponent = Math.floor(Math.log(value) / Math.log(10.0))\n    let exp10 = Math.pow(10.0, exponent)\n    let f = value / exp10 // 1 <= f < 10\n    let nf = 0\n    if (f < 1) {\n      nf = 1\n    } else if (f < 2) {\n      nf = 2\n    } else if (f < 3) {\n      nf = 3\n    } else if (f < 5) {\n      nf = 5\n    } else {\n      nf = 10\n    }\n    value = nf * exp10\n    return exponent >= -20 ? +value.toFixed(exponent < 0 ? -exponent : 0) : value\n  },\n\n  getIntervalPrecision (value) {\n    let str = value.toString()\n\n    // Consider scientific notation: '3.4e-12' '3.4e+12'\n    let eIndex = str.indexOf('e')\n    if (eIndex > 0) {\n      let precision = +str.slice(eIndex + 1)\n      return precision < 0 ? -precision : 0\n    } else {\n      let dotIndex = str.indexOf('.')\n      return dotIndex < 0 ? 0 : str.length - 1 - dotIndex\n    }\n  },\n\n  round (x, precision) {\n    if (precision == null) {\n      precision = 10\n    }\n    // Avoid range error\n    precision = Math.min(Math.max(0, precision), 20)\n    x = (+x).toFixed(precision)\n    return x\n  }\n}\n\nexport default utils\n","import Chart from './Chart'\nimport utils from '../utils/utils'\n\nclass AxisChart extends Chart {\n  constructor (dataBounds, viewPortHandler) {\n    super(dataBounds, viewPortHandler)\n    this.values = []\n    this.valueCount = 0\n  }\n\n  /**\n   * 计算x轴上的值\n   * @param min\n   * @param max\n   */\n  computeAxisValues (min, max) {\n    let span = max - min\n    if (span < 0) {\n      this.values = []\n      this.valueCount = 0\n      return\n    }\n    let interval = +utils.nice(span / 5.0)\n    let precision = utils.getIntervalPrecision(interval)\n    let first = +utils.round(Math.ceil(min / interval) * interval, precision)\n    let last = +utils.round(Math.floor(max / interval) * interval, precision)\n    let n = 0\n    let f = first\n\n    if (interval !== 0) {\n      while (f <= (+last)) {\n        ++n\n        f += interval\n      }\n    }\n    this.valueCount = n\n    this.values = []\n    let i = 0\n    f = first\n    while (i < n) {\n      this.values[i] = f\n      f += interval\n      ++i\n    }\n  }\n}\n\nexport default AxisChart\n","/**\n * 指标类型\n */\nexport const IndicatorType = {\n  /**\n   * 没有设置任何指标\n   */\n  NO: 'NO',\n\n  /**\n   * 均线\n   */\n  MA: 'MA',\n\n  /**\n   * 成交量\n   */\n  VOL: 'VOL',\n\n  /**\n   * 指数平滑异同平均线（MACD指标）\n   */\n  MACD: 'MACD',\n\n  /**\n   * 布林指标\n   */\n  BOLL: 'BOLL',\n\n  /**\n   * 随机指标(KDJ)\n   */\n  KDJ: 'KDJ',\n\n  /**\n   * 随机指标(KD)，同KDJ，只输出KD\n   */\n  KD: 'KD',\n\n  /**\n   * 强弱指标\n   */\n  RSI: 'RSI',\n\n  /**\n   * 乖离率（BIAS）是测量股价偏离均线大小程度的指标\n   */\n  BIAS: 'BIAS',\n\n  /**\n   * 情绪指标（BRAR）也称为人气意愿指标\n   */\n  BRAR: 'BRAR',\n\n  /**\n   * 顺势指标\n   */\n  CCI: 'CCI',\n\n  /**\n   * 动向指标\n   */\n  DMI: 'DMI',\n\n  /**\n   * 能量指标\n   */\n  CR: 'CR',\n\n  /**\n   * 心理线（PSY）指标是研究投资者对股市涨跌产生心理波动的情绪指标\n   */\n  PSY: 'PSY',\n\n  /**\n   * 平行线差指标\n   */\n  DMA: 'DMA',\n\n  /**\n   * 三重指数平滑平均线（TRIX）属于长线指标\n   */\n  TRIX: 'TRIX',\n\n  /**\n   * 平衡交易量指标\n   */\n  OBV: 'OBV',\n\n  /**\n   * 成交量变异率\n   */\n  VR: 'VR',\n\n  /**\n   * 威廉超买超卖指标\n   */\n  WR: 'WR',\n\n  /**\n   * 动量指标\n   */\n  MTM: 'MTM',\n\n  /**\n   * 简易波动指标\n   */\n  EMV: 'EMV',\n\n  /**\n   * 停损转向操作点指标\n   */\n  SAR: 'SAR'\n}\n\nclass Indicator {\n  constructor () {\n    /**\n     * 线的尺寸\n     */\n    this.lineSize = 1\n\n    this.increasingColor = '#5DB300'\n\n    this.decreasingColor = '#FF4A4A'\n\n    this.lineColors = ['#898989', '#F5A623', '#F601FF', '#1587DD', '#50A300']\n  }\n}\n\nexport default Indicator\n","/**\n * 线的风格\n */\nexport const LineStyle = {\n  /**\n   * 虚线\n   */\n  DASH: 'dash',\n  /**\n   * 实线\n   */\n  SOLID: 'solid'\n}\n","import { LineStyle } from './Component'\nimport { YAxisTextPosition } from './YAxis'\n\nclass Axis {\n  constructor () {\n    /**\n     * 是否显示整个轴\n     */\n    this.display = true\n    /**\n     * 整个轴的颜色\n     */\n    this.color = '#707070'\n\n    /**\n     * 轴线配置\n     */\n    this.axisLine = {\n      display: true,\n      color: '#707070',\n      size: 1\n    }\n\n    /**\n     * 分割文字配置\n     */\n    this.tickText = {\n      display: true,\n      position: YAxisTextPosition.OUTSIDE,\n      color: '#707070',\n      size: 12,\n      margin: 3,\n      valueFormatter: null\n    }\n\n    /**\n     * 分割tick线配置\n     */\n    this.tickLine = {\n      display: true,\n      size: 3,\n      color: '#707070'\n    }\n\n    /**\n     * 分割线配置\n     */\n    this.separatorLine = {\n      display: false,\n      size: 1,\n      color: '#B8B8B8',\n      style: LineStyle.DASH,\n      dashValue: [8, 8]\n    }\n  }\n}\n\nexport default Axis\n","import Axis from './Axis'\n\nimport utils from '../utils/utils'\n\n/**\n * y轴位置\n */\nexport const YAxisPosition = {\n  /**\n   * 左边\n   */\n  LEFT: 'left',\n  /**\n   * 右边\n   */\n  RIGHT: 'right'\n}\n\n/**\n * y轴上文字位置\n */\nexport const YAxisTextPosition = {\n  /**\n   * 外部\n   */\n  OUTSIDE: 'outside',\n  /**\n   * 内部\n   */\n  INSIDE: 'inside'\n}\n\nclass YAxis extends Axis {\n  constructor () {\n    super()\n    /**\n     * y轴位置\n     */\n    this.yAxisPosition = YAxisPosition.RIGHT\n\n    /**\n     * y轴最大宽度\n     */\n    this.yAxisMaxWidth = 80\n\n    /**\n     * y轴最小宽度\n     */\n    this.yAxisMinWidth = 40\n  }\n\n  /**\n   * 是否需要留间距绘制y轴\n   * @return Boolean\n   */\n  needsOffset () {\n    return (((this.tickText.display || this.tickLine.display || this.tickText.margin > 0) && this.tickText.position === YAxisTextPosition.OUTSIDE) ||\n      this.axisLine.display) && this.display\n  }\n  /**\n   * 获取y轴需要的宽度\n   * @return number\n   */\n  getRequiredWidthSpace () {\n    let width = 0\n    if (this.tickText.position === YAxisTextPosition.OUTSIDE) {\n      width += utils.calcTextWidth(this.tickText.size * 2, '0000000') + this.tickText.margin * 2\n      if (this.display && this.tickLine.display) {\n        width += this.tickLine.size * 2\n      }\n    }\n\n    if (this.display && this.axisLine.display) {\n      width += this.axisLine.size\n    }\n\n    if (width === this.axisLine.size) {\n      return width\n    }\n    let maxWidth = width\n    if (maxWidth > 0) {\n      maxWidth = this.yAxisMaxWidth * 2\n      width = Math.min(maxWidth, Math.max(width, this.yAxisMinWidth * 2))\n    }\n    return width\n  }\n}\n\nexport default YAxis\n","import AxisChart from './AxisChart'\nimport { IndicatorType } from '../component/Indicator'\nimport { YAxisPosition, YAxisTextPosition } from '../component/YAxis'\nimport { LineStyle } from '../component/Component'\n\nclass YAxisChart extends AxisChart {\n  constructor (yAxis, dataBounds, viewPortHandler) {\n    super(dataBounds, viewPortHandler)\n    this.axisMaximum = 0\n    this.axisMinimum = 0\n    this.axisRange = 0\n    this.yAxis = yAxis\n  }\n\n  drawAxisLine (canvas) {\n    if (!this.yAxis.display || !this.yAxis.axisLine.display) {\n      return\n    }\n    canvas.strokeStyle = this.yAxis.axisLine.color || this.yAxis.color\n    canvas.lineWidth = this.yAxis.axisLine.size\n    canvas.beginPath()\n    if (this.yAxis.yAxisPosition === YAxisPosition.LEFT) {\n      canvas.moveTo(this.viewPortHandler.contentLeft(), this.chartTop)\n      canvas.lineTo(this.viewPortHandler.contentLeft(), this.chartTop + this.chartHeight)\n    } else {\n      canvas.moveTo(this.viewPortHandler.contentRight(), this.chartTop)\n      canvas.lineTo(this.viewPortHandler.contentRight(), this.chartTop + this.chartHeight)\n    }\n    canvas.stroke()\n    canvas.closePath()\n  }\n\n  /**\n   * 绘制y轴上文字\n   * @param canvas\n   */\n  drawAxisLabels (canvas) {\n    if (!this.yAxis.display || !this.yAxis.tickText.display) {\n      return\n    }\n\n    let initX\n    if (this.yAxis.yAxisPosition === YAxisPosition.LEFT) {\n      if (this.yAxis.tickText.position === YAxisTextPosition.OUTSIDE) {\n        if (this.yAxis.display && this.yAxis.tickLine.display) {\n          initX = this.viewPortHandler.contentLeft() - this.yAxis.tickLine.size * 2 - this.yAxis.tickText.margin * 2\n        } else {\n          initX = this.viewPortHandler.contentLeft() - this.yAxis.tickText.margin * 2\n        }\n      } else {\n        if (this.yAxis.display && this.yAxis.tickLine.display) {\n          initX = this.viewPortHandler.contentLeft() + this.yAxis.tickLine.size * 2 + this.yAxis.tickText.margin * 2\n        } else {\n          initX = this.viewPortHandler.contentLeft() + this.yAxis.tickText.margin * 2\n        }\n      }\n    } else {\n      if (this.yAxis.tickText.position === YAxisTextPosition.OUTSIDE) {\n        if (this.yAxis.display && this.yAxis.tickLine.display) {\n          initX = this.viewPortHandler.contentRight() + this.yAxis.tickLine.size * 2 + this.yAxis.tickText.margin * 2\n        } else {\n          initX = this.viewPortHandler.contentRight() + this.yAxis.tickText.margin * 2\n        }\n      } else {\n        if (this.yAxis.display && this.yAxis.tickLine.display) {\n          initX = this.viewPortHandler.contentRight() - this.yAxis.tickLine.size * 2 - this.yAxis.tickText.margin * 2\n        } else {\n          initX = this.viewPortHandler.contentRight() - this.yAxis.tickText.margin * 2\n        }\n      }\n    }\n\n    canvas.font = this.yAxis.tickText.size * 2 + 'px Arial'\n    canvas.fillStyle = this.yAxis.tickText.color || this.yAxis.color\n\n    let labelHeight = this.yAxis.tickText.size * 2\n    let halfLabelHeight = labelHeight / 2\n\n    let formatter = this.yAxis.tickText.valueFormatter\n    for (let i = 0; i < this.values.length; i++) {\n      let labelY = this.getValueY(this.values[i])\n      let label = this.values[i].toString()\n      if (formatter) {\n        label = formatter(this.values[i]) || '--'\n      }\n      if (this.checkShowLabel(labelY, labelHeight)) {\n        if ((this.yAxis.yAxisPosition === YAxisPosition.LEFT && this.yAxis.tickText.position === YAxisTextPosition.OUTSIDE) ||\n          (this.yAxis.yAxisPosition === YAxisPosition.RIGHT && this.yAxis.tickText.position !== YAxisTextPosition.OUTSIDE)) {\n          canvas.textAlign = 'right'\n        } else {\n          canvas.textAlign = 'left'\n        }\n        let startY = labelY + halfLabelHeight\n        canvas.fillText(label, initX, startY)\n      }\n    }\n    canvas.textAlign = 'left'\n  }\n\n  /**\n   * 绘制y轴分割线\n   * @param canvas\n   */\n  drawSeparatorLines (canvas) {\n    if (!this.yAxis.display || !this.yAxis.separatorLine.display) {\n      return\n    }\n    canvas.strokeStyle = this.yAxis.separatorLine.color || this.yAxis.color\n    canvas.lineWidth = this.yAxis.separatorLine.size\n\n    let labelHeight = this.yAxis.tickText.size * 2\n\n    if (this.xAxis.separatorLine.style === LineStyle.DASH) {\n      canvas.setLineDash(this.xAxis.separatorLine.dashValue)\n    }\n\n    for (let i = 0; i < this.values.length; i++) {\n      let y = this.getValueY(this.values[i])\n      if (this.checkShowLabel(y, labelHeight)) {\n        canvas.beginPath()\n        canvas.moveTo(this.viewPortHandler.contentLeft(), y)\n        canvas.lineTo(this.viewPortHandler.contentRight(), y)\n        canvas.stroke()\n        canvas.closePath()\n      }\n    }\n    canvas.setLineDash([])\n  }\n\n  /**\n   * 绘制刻度线\n   * @param canvas\n   */\n  drawTickLines (canvas) {\n    if (!this.yAxis.display || !this.yAxis.tickLine.display) {\n      return\n    }\n    canvas.lineWidth = 1\n    canvas.strokeStyle = this.yAxis.axisLine.color || this.yAxis.color\n    let labelHeight = this.yAxis.tickText.size * 2\n    let startX\n    let endX\n    if (this.yAxis.yAxisPosition === YAxisPosition.LEFT) {\n      startX = this.viewPortHandler.contentLeft()\n      if (this.yAxis.tickText.position === YAxisTextPosition.OUTSIDE) {\n        endX = startX - this.yAxis.tickLine.size * 2\n      } else {\n        endX = startX + this.yAxis.tickLine.size * 2\n      }\n    } else {\n      startX = this.viewPortHandler.contentRight()\n      if (this.yAxis.tickText.position === YAxisTextPosition.OUTSIDE) {\n        endX = startX + this.yAxis.tickLine.size * 2\n      } else {\n        endX = startX - this.yAxis.tickLine.size * 2\n      }\n    }\n    for (let i = 0; i < this.values.length; i++) {\n      let y = this.getValueY(this.values[i])\n      if (this.checkShowLabel(y, labelHeight)) {\n        canvas.beginPath()\n        canvas.moveTo(startX, y)\n        canvas.lineTo(endX, y)\n        canvas.stroke()\n        canvas.closePath()\n      }\n    }\n  }\n\n  /**\n   * 检查是否需要真正显示label及tick线 分割线\n   * @param y\n   * @param labelHeight\n   */\n  checkShowLabel (y, labelHeight) {\n    return y > this.chartTop + labelHeight && y < this.chartTop + this.chartHeight - labelHeight\n  }\n\n  /**\n   * 计算y轴数据的最大最小值\n   * @param indicatorType\n   * @param isMainChart\n   * @param isTimeLine\n   */\n  getYAxisDataMinMax (indicatorType, isMainChart = false, isTimeLine = false) {\n    let dataList = this.dataBounds.dataList\n    let min = this.dataBounds.min\n    let max = Math.min(min + this.dataBounds.range, dataList.length)\n    let minMaxArray = [Number.MAX_VALUE, Number.MIN_VALUE]\n    if (isTimeLine) {\n      for (let i = min; i < max; i++) {\n        let model = dataList[i]\n        minMaxArray[0] = Math.min(model.averagePrice, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.close, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.averagePrice, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.close, minMaxArray[1])\n      }\n    } else {\n      for (let i = min; i < max; i++) {\n        let model = dataList[i]\n        this.calcIndexMinMax(model, indicatorType, minMaxArray)\n        if (isMainChart) {\n          minMaxArray[0] = Math.min(model.low, minMaxArray[0])\n          minMaxArray[1] = Math.max(model.high, minMaxArray[1])\n        }\n      }\n    }\n\n    if (minMaxArray[0] !== Number.MAX_VALUE && minMaxArray[1] !== Number.MIN_VALUE) {\n      this.axisMinimum = minMaxArray[0]\n      this.axisMaximum = minMaxArray[1]\n      this.computeAxis()\n    }\n  }\n\n  /**\n   * 计算指标值的最大最小值\n   * @param model\n   * @param indexType\n   * @param minMaxArray\n   * @returns {*}\n   */\n  calcIndexMinMax (model, indexType, minMaxArray) {\n    switch (indexType) {\n      case IndicatorType.MA: {\n        minMaxArray[0] = Math.min(model.ma.ma5, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.ma.ma10, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.ma.ma20, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.ma.ma60, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.ma.ma5, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.ma.ma10, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.ma.ma20, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.ma.ma60, minMaxArray[1])\n        break\n      }\n      case IndicatorType.MACD: {\n        minMaxArray[0] = Math.min(model.macd.dea, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.macd.diff, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.macd.macd, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.macd.dea, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.macd.diff, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.macd.macd, minMaxArray[1])\n        break\n      }\n      case IndicatorType.VOL: {\n        minMaxArray[0] = Math.min(model.vol.ma5, 0)\n        minMaxArray[0] = Math.min(model.vol.ma10, 0)\n        minMaxArray[0] = Math.min(model.vol.ma20, 0)\n        minMaxArray[0] = Math.min(model.vol.num, 0)\n        minMaxArray[1] = Math.max(model.vol.ma5, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.vol.ma10, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.vol.ma20, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.vol.num, minMaxArray[1])\n        break\n      }\n      case IndicatorType.BOLL: {\n        minMaxArray[0] = Math.min(model.boll.up, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.boll.mid, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.boll.dn, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.low, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.boll.up, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.boll.mid, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.boll.dn, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.high, minMaxArray[1])\n        break\n      }\n      case IndicatorType.BIAS: {\n        minMaxArray[0] = Math.min(model.bias.bias1, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.bias.bias2, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.bias.bias3, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.bias.bias1, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.bias.bias2, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.bias.bias3, minMaxArray[1])\n        break\n      }\n      case IndicatorType.BRAR: {\n        minMaxArray[0] = Math.min(model.brar.br, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.brar.ar, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.brar.br, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.brar.ar, minMaxArray[1])\n        break\n      }\n      case IndicatorType.CCI: {\n        minMaxArray[0] = Math.min(model.cci.cci, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.cci.cci, minMaxArray[1])\n        break\n      }\n      case IndicatorType.CR: {\n        minMaxArray[0] = Math.min(model.cr.cr, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.cr.ma1, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.cr.ma2, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.cr.ma3, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.cr.ma4, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.cr.cr, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.cr.ma1, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.cr.ma2, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.cr.ma3, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.cr.ma4, minMaxArray[1])\n        break\n      }\n      case IndicatorType.DMA: {\n        minMaxArray[0] = Math.min(model.dma.dif, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.dma.difMa, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.dma.dif, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.dma.difMa, minMaxArray[1])\n        break\n      }\n      case IndicatorType.DMI: {\n        minMaxArray[0] = Math.min(model.dmi.pdi, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.dmi.mdi, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.dmi.adx, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.dmi.adxr, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.dmi.pdi, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.dmi.mdi, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.dmi.adx, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.dmi.adxr, minMaxArray[1])\n        break\n      }\n      case IndicatorType.KDJ: {\n        minMaxArray[0] = Math.min(model.kdj.k, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.kdj.d, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.kdj.j, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.kdj.k, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.kdj.d, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.kdj.j, minMaxArray[1])\n        break\n      }\n      case IndicatorType.KD: {\n        minMaxArray[0] = Math.min(model.kdj.k, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.kdj.d, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.kdj.k, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.kdj.d, minMaxArray[1])\n        break\n      }\n      case IndicatorType.RSI: {\n        minMaxArray[0] = Math.min(model.rsi.rsi1, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.rsi.rsi2, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.rsi.rsi3, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.rsi.rsi1, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.rsi.rsi2, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.rsi.rsi3, minMaxArray[1])\n        break\n      }\n      case IndicatorType.PSY: {\n        minMaxArray[0] = Math.min(model.psy.psy, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.psy.psy, minMaxArray[1])\n        break\n      }\n      case IndicatorType.TRIX: {\n        minMaxArray[0] = Math.min(model.trix.trix, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.trix.maTrix, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.trix.trix, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.trix.maTrix, minMaxArray[1])\n        break\n      }\n      case IndicatorType.OBV: {\n        minMaxArray[0] = Math.min(model.obv.obv, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.obv.maObv, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.obv.obv, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.obv.maObv, minMaxArray[1])\n        break\n      }\n      case IndicatorType.VR: {\n        minMaxArray[0] = Math.min(model.vr.vr, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.vr.maVr, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.vr.vr, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.vr.maVr, minMaxArray[1])\n        break\n      }\n      case IndicatorType.WR: {\n        minMaxArray[0] = Math.min(model.wr.wr1, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.wr.wr2, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.wr.wr3, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.wr.wr1, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.wr.wr2, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.wr.wr3, minMaxArray[1])\n        break\n      }\n      case IndicatorType.MTM: {\n        minMaxArray[0] = Math.min(model.mtm.mtm, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.mtm.mtmMa, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.mtm.mtm, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.mtm.mtmMa, minMaxArray[1])\n        break\n      }\n      case IndicatorType.EMV: {\n        minMaxArray[0] = Math.min(model.emv.emv, minMaxArray[0])\n        minMaxArray[0] = Math.min(model.emv.maEmv, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.emv.emv, minMaxArray[1])\n        minMaxArray[1] = Math.max(model.emv.maEmv, minMaxArray[1])\n        break\n      }\n      case IndicatorType.SAR: {\n        minMaxArray[0] = Math.min(model.sar.sar, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.sar.sar, minMaxArray[1])\n        minMaxArray[0] = Math.min(model.low, minMaxArray[0])\n        minMaxArray[1] = Math.max(model.high, minMaxArray[1])\n        break\n      }\n    }\n    return minMaxArray\n  }\n\n  computeAxis () {\n    let min = this.axisMinimum\n    let max = this.axisMaximum\n\n    let range = Math.abs(max - min)\n\n    if (range === 0) {\n      max += 1\n      min -= 1\n      range = Math.abs(max - min)\n    }\n\n    this.axisMinimum = min - (range / 100) * 10\n    this.axisMaximum = max + (range / 100) * 20\n\n    this.axisRange = Math.abs(this.axisMaximum - this.axisMinimum)\n\n    this.computeAxisValues(this.axisMinimum, this.axisMaximum)\n  }\n\n  /**\n   * 获取y点坐标\n   * @param yValue Float\n   * @return number\n   */\n  getValueY (yValue) {\n    return this.getY(yValue, this.axisMinimum, this.axisRange)\n  }\n}\n\nexport default YAxisChart\n","import Chart from './Chart'\nimport YAxisChart from './YAxisChart'\nimport { IndicatorType } from '../component/Indicator'\n\nclass IndicatorChart extends Chart {\n  constructor (indicator, xAxis, yAxis, dataBounds, viewPortHandler, indicatorType = IndicatorType.MACD) {\n    super(dataBounds, viewPortHandler)\n    this.indicator = indicator\n    this.xAxis = xAxis\n    this.yAxisChart = new YAxisChart(yAxis, dataBounds, viewPortHandler)\n    this.indicatorType = indicatorType\n  }\n\n  setChartDimens (height, top) {\n    super.setChartDimens(height, top)\n    this.yAxisChart.setChartDimens(height, top)\n  }\n\n  draw (canvas) {\n    this.drawChartHorizontalSeparatorLine(canvas)\n    this.yAxisChart.getYAxisDataMinMax(this.indicatorType)\n    this.yAxisChart.drawSeparatorLines(canvas)\n    this.yAxisChart.drawTickLines(canvas)\n\n    this.drawIndicator(canvas)\n\n    this.yAxisChart.drawAxisLine(canvas)\n    this.yAxisChart.drawAxisLabels(canvas)\n  }\n\n  /**\n   * 绘制各图之间分割线\n   * @param canvas\n   */\n  drawChartHorizontalSeparatorLine (canvas) {\n    canvas.lineWidth = this.xAxis.axisLine.size\n    canvas.strokeStyle = this.xAxis.axisLine.color\n    canvas.beginPath()\n    canvas.moveTo(this.viewPortHandler.contentLeft(), this.chartTop)\n    canvas.lineTo(this.viewPortHandler.contentRight(), this.chartTop)\n    canvas.closePath()\n    canvas.stroke()\n  }\n\n  /**\n   * 绘制指标\n   * @param canvas\n   * @param isMainIndicator\n   */\n  drawIndicator (canvas, isMainIndicator = false) {\n    switch (this.indicatorType) {\n      case IndicatorType.MA: {\n        this.drawLines(canvas, 'ma', ['ma5', 'ma10', 'ma20', 'ma60'])\n        break\n      }\n\n      case IndicatorType.MACD: {\n        this.drawBarLines(canvas, 'macd', 'macd', ['diff', 'dea'], (kLineModel, preKLineModel, barBuffer) => {\n          let macd = (kLineModel.macd || {}).macd\n          let preMacd = ((preKLineModel || {}).macd || {}).macd\n          if (macd > 0) {\n            canvas.strokeStyle = this.indicator.increasingColor\n            canvas.fillStyle = this.indicator.increasingColor\n          } else {\n            canvas.strokeStyle = this.indicator.decreasingColor\n            canvas.fillStyle = this.indicator.decreasingColor\n          }\n          if ((preMacd || preMacd === 0) && macd > preMacd) {\n            canvas.strokeRect(barBuffer[0], barBuffer[1], barBuffer[2] - barBuffer[0], barBuffer[3] - barBuffer[1])\n          } else {\n            canvas.fillRect(barBuffer[0], barBuffer[1], barBuffer[2] - barBuffer[0], barBuffer[3] - barBuffer[1])\n          }\n        })\n        break\n      }\n\n      case IndicatorType.VOL: {\n        this.drawBarLines(canvas, 'vol', 'num', ['ma5', 'ma10', 'ma20'], (kLineModel, preKLineModel, barBuffer) => {\n          let close = kLineModel.close\n          let preClose = (preKLineModel || {}).close\n          if ((preClose || preClose === 0) && close > preClose) {\n            canvas.fillStyle = this.indicator.increasingColor\n          } else {\n            canvas.fillStyle = this.indicator.decreasingColor\n          }\n          canvas.fillRect(barBuffer[0], barBuffer[1], barBuffer[2] - barBuffer[0], barBuffer[3] - barBuffer[1])\n        })\n        break\n      }\n\n      case IndicatorType.BOLL: {\n        this.drawLines(canvas, 'boll', ['up', 'mid', 'dn'], (x, kLineModel) => {\n          let halfSpace = this.dataBounds.dataSpace * (1 - this.dataBounds.dataMarginSpaceRate) / 2\n          this.drawOhlc(canvas, halfSpace, x, kLineModel, isMainIndicator)\n        })\n        break\n      }\n\n      case IndicatorType.BIAS: {\n        this.drawLines(canvas, 'bias', ['bias1', 'bias2', 'bias3'])\n        break\n      }\n\n      case IndicatorType.BRAR: {\n        this.drawLines(canvas, 'brar', ['br', 'ar'])\n        break\n      }\n\n      case IndicatorType.CCI: {\n        this.drawLines(canvas, 'cci', ['cci'])\n        break\n      }\n\n      case IndicatorType.CR: {\n        this.drawLines(canvas, 'cr', ['cr', 'ma1', 'ma2', 'ma3', 'ma4'])\n        break\n      }\n\n      case IndicatorType.DMA: {\n        this.drawLines(canvas, 'dma', ['dif', 'difMa'])\n        break\n      }\n\n      case IndicatorType.DMI: {\n        this.drawLines(canvas, 'dmi', ['mdi', 'pdi', 'adx', 'adxr'])\n        break\n      }\n\n      case IndicatorType.KDJ: {\n        this.drawLines(canvas, 'kdj', ['k', 'd', 'j'])\n        break\n      }\n\n      case IndicatorType.KD: {\n        this.drawLines(canvas, 'kd', ['k', 'd'])\n        break\n      }\n\n      case IndicatorType.RSI: {\n        this.drawLines(canvas, 'rsi', ['rsi1', 'rsi2', 'rsi3'])\n        break\n      }\n\n      case IndicatorType.PSY: {\n        this.drawLines(canvas, 'psy', ['psy'])\n        break\n      }\n\n      case IndicatorType.TRIX: {\n        this.drawLines(canvas, 'trix', ['trix', 'maTrix'])\n        break\n      }\n\n      case IndicatorType.OBV: {\n        this.drawLines(canvas, 'obv', ['obv', 'maObv'])\n        break\n      }\n\n      case IndicatorType.VR: {\n        this.drawLines(canvas, 'vr', ['vr', 'maVr'])\n        break\n      }\n\n      case IndicatorType.WR: {\n        this.drawLines(canvas, 'wr', ['wr1', 'wr2', 'wr3'])\n        break\n      }\n\n      case IndicatorType.MTM: {\n        this.drawLines(canvas, 'mtm', ['mtm', 'mtmMa'])\n        break\n      }\n\n      case IndicatorType.EMV: {\n        this.drawLines(canvas, 'emv', ['emv', 'maEmv'])\n        break\n      }\n\n      case IndicatorType.SAR: {\n        this.drawSar(canvas, isMainIndicator)\n      }\n    }\n  }\n\n  /**\n   * 绘制Sar\n   * @param canvas\n   * @param isMainIndicator\n   */\n  drawSar (canvas, isMainIndicator) {\n    canvas.save()\n    canvas.beginPath()\n    canvas.rect(\n      this.viewPortHandler.contentLeft(),\n      this.chartTop,\n      this.viewPortHandler.contentRight() - this.viewPortHandler.contentLeft(),\n      this.viewPortHandler.contentBottom() - this.chartTop\n    )\n    canvas.closePath()\n    canvas.clip()\n    canvas.lineWidth = 1\n    let startX = this.viewPortHandler.contentLeft()\n    let dataSpace = this.dataBounds.dataSpace * (1 - this.dataBounds.dataMarginSpaceRate)\n    let halfBarSpace = dataSpace / 2\n    let i = this.dataBounds.min\n    while (i < this.dataBounds.dataList.length && i < this.dataBounds.min + this.dataBounds.range) {\n      let endX = startX + dataSpace\n      let x = (startX + endX) / 2\n      let kLineModel = this.dataBounds.dataList[i]\n\n      this.drawOhlc(canvas, halfBarSpace, x, kLineModel, isMainIndicator)\n\n      let data = kLineModel.sar\n      let sar = data.sar\n      if (sar || sar === 0) {\n        let dataY = this.getValueY(sar)\n        if (sar < (kLineModel.high + kLineModel.low) / 2) {\n          canvas.strokeStyle = this.indicator.increasingColor\n        } else {\n          canvas.strokeStyle = this.indicator.decreasingColor\n        }\n        canvas.beginPath()\n        canvas.arc(x, dataY, halfBarSpace, Math.PI * 2, 0, true)\n        canvas.stroke()\n        canvas.closePath()\n      }\n      startX += this.dataBounds.dataSpace\n      ++i\n    }\n    canvas.restore()\n  }\n\n  /**\n   * 绘制有柱状图有线的指标\n   * @param canvas\n   * @param dataKey\n   * @param barDataKey\n   * @param lineDataKeys\n   * @param drawRect\n   */\n  drawBarLines (canvas, dataKey, barDataKey, lineDataKeys, drawRect) {\n    let startX = this.viewPortHandler.contentLeft()\n    let dataSpace = this.dataBounds.dataSpace * (1 - this.dataBounds.dataMarginSpaceRate)\n    let halfBarSpace = dataSpace / 2\n    let i = this.dataBounds.min\n    let barBuffer = []\n    let lineValues = []\n    while (i < this.dataBounds.dataList.length && i < this.dataBounds.min + this.dataBounds.range) {\n      let endX = startX + dataSpace\n      let x = (startX + endX) / 2\n      let kLineModel = this.dataBounds.dataList[i]\n      let preKLineModel\n      if (i > 0) {\n        preKLineModel = this.dataBounds.dataList[i - 1]\n      }\n      let data = kLineModel[dataKey]\n      let barData = data[barDataKey]\n      if (barData || barData === 0) {\n        barBuffer[0] = x - halfBarSpace\n        barBuffer[2] = x + halfBarSpace\n        let dataY = this.getValueY(barData)\n        let zeroY = this.getValueY(0)\n        barBuffer[1] = dataY\n        barBuffer[3] = zeroY\n\n        drawRect(kLineModel, preKLineModel, barBuffer)\n      }\n      for (let j = 0; j < lineDataKeys.length; j++) {\n        let value = data[lineDataKeys[j]]\n        let valueY = this.getValueY(value)\n        if (!lineValues[j]) {\n          lineValues[j] = [{ x: x, y: valueY }]\n        } else {\n          lineValues[j].push({ x: x, y: valueY })\n        }\n      }\n      startX += this.dataBounds.dataSpace\n      ++i\n    }\n    this.drawLine(canvas, lineValues)\n  }\n\n  /**\n   * 绘制只有线的指标\n   * @param canvas\n   * @param dataKey\n   * @param lineDataKeys\n   * @param draw\n   */\n  drawLines (canvas, dataKey, lineDataKeys, draw) {\n    let startX = this.viewPortHandler.contentLeft()\n    let i = this.dataBounds.min\n    let dataSpace = this.dataBounds.dataSpace * (1 - this.dataBounds.dataMarginSpaceRate)\n    let lineValues = []\n    while (i < this.dataBounds.dataList.length && i < this.dataBounds.min + this.dataBounds.range) {\n      let endX = startX + dataSpace\n      let x = (startX + endX) / 2\n      let kLineModel = this.dataBounds.dataList[i]\n      if (draw) {\n        draw(x, kLineModel)\n      }\n      let data = kLineModel[dataKey]\n      for (let j = 0; j < lineDataKeys.length; j++) {\n        let value = data[lineDataKeys[j]]\n        let valueY = this.getValueY(value)\n        if (!lineValues[j]) {\n          lineValues[j] = [{ x: x, y: valueY }]\n        } else {\n          lineValues[j].push({ x: x, y: valueY })\n        }\n      }\n\n      startX += this.dataBounds.dataSpace\n      ++i\n    }\n    this.drawLine(canvas, lineValues)\n  }\n\n  /**\n   * 绘制线\n   * @param canvas\n   * @param lineValues\n   */\n  drawLine (canvas, lineValues) {\n    for (let i = 0; i < lineValues.length; i++) {\n      let values = lineValues[i]\n      if (values.length > 0) {\n        canvas.strokeStyle = this.indicator.lineColors[i]\n        canvas.beginPath()\n        canvas.moveTo(values[0].x, values[0].y)\n        for (let j = 1; j < values.length; j++) {\n          canvas.lineTo(values[j].x, values[j].y)\n        }\n        canvas.stroke()\n        canvas.closePath()\n      }\n    }\n  }\n\n  /**\n   * 绘制指标图里面的开低高收价\n   */\n  drawOhlc (canvas, halfBarSpace, x, kLineModel, isMainIndicator) {\n    if (!isMainIndicator) {\n      let openY = this.getValueY(kLineModel.open)\n      let closeY = this.getValueY(kLineModel.close)\n      let highY = this.getValueY(kLineModel.high)\n      let lowY = this.getValueY(kLineModel.low)\n      if (kLineModel.close > kLineModel.open) {\n        canvas.strokeStyle = this.indicator.increasingColor\n      } else {\n        canvas.strokeStyle = this.indicator.decreasingColor\n      }\n      this.drawOhlcLines(canvas, halfBarSpace, x, openY, closeY, highY, lowY)\n    }\n  }\n\n  /**\n   * 绘制ohlc线\n   * @param canvas\n   * @param halfBarSpace\n   * @param x\n   * @param openY\n   * @param closeY\n   * @param highY\n   * @param lowY\n   */\n  drawOhlcLines (canvas, halfBarSpace, x, openY, closeY, highY, lowY) {\n    canvas.beginPath()\n    canvas.moveTo(x, highY)\n    canvas.lineTo(x, lowY)\n    canvas.stroke()\n    canvas.closePath()\n\n    canvas.beginPath()\n    canvas.moveTo(x - halfBarSpace, openY)\n    canvas.lineTo(x, openY)\n    canvas.stroke()\n    canvas.closePath()\n\n    canvas.beginPath()\n    canvas.moveTo(x + halfBarSpace, closeY)\n    canvas.lineTo(x, closeY)\n    canvas.stroke()\n    canvas.closePath()\n  }\n\n  /**\n   * 获取y点坐标\n   * @param yValue Float\n   */\n  getValueY (yValue) {\n    return this.getY(yValue, this.yAxisChart.axisMinimum, this.yAxisChart.axisRange)\n  }\n\n  /**\n   * 是否显示图\n   * @returns {boolean}\n   */\n  isDisplayChart () {\n    return this.indicatorType !== IndicatorType.NO\n  }\n}\n\nexport default IndicatorChart\n","import { LineStyle } from './Component'\n\n/**\n * 蜡烛图样式\n */\nexport const CandleStyle = {\n  /**\n   * 全实心\n   */\n  SOLID: 'solid',\n\n  /**\n   * 全空心\n   */\n  STROKE: 'stroke',\n\n  /**\n   * 涨空心\n   */\n  INCREASING_STROKE: 'increasing_stroke',\n\n  /**\n   * 跌空心\n   */\n  DECREASING_STROKE: 'decreasing_stroke',\n\n  /**\n   * 美国线\n   */\n  OHLC: 'ohlc'\n}\n\n/**\n * 图表类型\n */\nexport const ChartStyle = {\n  /**\n   * 蜡烛图\n   */\n  CANDLE: 'candle',\n\n  /**\n   * 分时线\n   */\n  TIME_LINE: 'time_line'\n}\n\nclass Candle {\n  constructor () {\n    /**\n     * 图类型\n     */\n    this.chartStyle = ChartStyle.CANDLE\n\n    /**\n     * 分时图配置\n     */\n    this.timeChart = {\n      /**\n       * 分时线尺寸\n       */\n      timeLineSize: 1,\n\n      /**\n       * 分时线颜色\n       */\n      timeLineColor: '#D8D8D8',\n\n      /**\n       * 分时线填充色\n       */\n      timeLineFillColor: '#f4f4f4',\n\n      /**\n       * 分时均线颜色\n       */\n      timeAverageLineColor: '#F5A623'\n    }\n\n    /**\n     * 蜡烛图配置\n     */\n    this.candleChart = {\n      /**\n       * 蜡烛图样式\n       */\n      candleStyle: CandleStyle.SOLID,\n      /**\n       * 上涨颜色\n       */\n      increasingColor: '#5DB300',\n      /**\n       * 下跌颜色\n       */\n      decreasingColor: '#FF4A4A'\n    }\n\n    /**\n     * 最低最高价格标记文字颜色\n     */\n    this.lowestHighestPriceMarkTextColor = '#898989'\n\n    /**\n     * 最低最高价格标记文字大小\n     */\n    this.lowestHighestPriceMarkTextSize = 10\n\n    /**\n     * 最高最低价格标记值格式化\n     */\n    this.lowestHighestValueFormatter = null\n\n    /**\n     * 最大价格标记参数\n     */\n    this.highestPriceMark = {\n      display: true,\n      color: '#898989',\n      textSize: 10,\n      valueFormatter: null\n    }\n\n    /**\n     * 最小价格标记参数\n     */\n    this.lowestPriceMark = {\n      display: true,\n      color: '#898989',\n      textSize: 10,\n      valueFormatter: null\n    }\n\n    /**\n     * 最新价标记参数\n     */\n    this.lastPriceMark = {\n      display: true,\n      lineStyle: LineStyle.DASH,\n      dashValue: [8, 8],\n      lineSize: 1,\n      lineColor: '#B9B9B9'\n    }\n  }\n}\n\nexport default Candle\n","import IndicatorChart from './IndicatorChart'\nimport { LineStyle } from '../component/Component'\nimport { IndicatorType } from '../component/Indicator'\nimport { ChartStyle, CandleStyle } from '../component/Candle'\n\nclass CandleChart extends IndicatorChart {\n  constructor (candle, indicator, yAxis, dataBounds, viewPortHandler) {\n    super(indicator, null, yAxis, dataBounds, viewPortHandler)\n    this.candle = candle\n    this.indicatorType = IndicatorType.MA\n    // 最高价标记数据\n    this.highestMarkData = {}\n    // 最低价标记数据\n    this.lowestMarkData = {}\n  }\n\n  /**\n   * 绘制\n   * @param canvas\n   */\n  draw (canvas) {\n    let isTimeLineChart = this.candle.chartStyle === ChartStyle.TIME_LINE\n    this.yAxisChart.getYAxisDataMinMax(this.indicatorType, true, isTimeLineChart)\n    this.yAxisChart.drawSeparatorLines(canvas)\n    this.yAxisChart.drawTickLines(canvas)\n    if (!isTimeLineChart) {\n      this.drawCandle(canvas)\n      this.drawIndicator(canvas, true)\n      this.drawHighestPriceMark(canvas)\n      this.drawLowestPriceMark(canvas)\n    } else {\n      this.drawTimeLine(canvas)\n    }\n    this.drawLastPriceMark(canvas)\n    this.yAxisChart.drawAxisLine(canvas)\n    this.yAxisChart.drawAxisLabels(canvas)\n  }\n\n  /**\n   * 绘制蜡烛图\n   * @param canvas\n   */\n  drawCandle (canvas) {\n    canvas.lineWidth = 1\n    let kLineDataList = this.dataBounds.dataList\n    let startX = this.viewPortHandler.contentLeft()\n    let i = this.dataBounds.min\n    let candleSpace = this.dataBounds.dataSpace * (1 - this.dataBounds.dataMarginSpaceRate)\n    let halfSpace = candleSpace / 2\n    let rect = []\n    let markHighestPrice = Number.MIN_VALUE\n    let markHighestPriceX = -1\n    let markLowestPrice = Number.MAX_VALUE\n    let markLowestPriceX = -1\n    while (i < kLineDataList.length && i < this.dataBounds.min + this.dataBounds.range) {\n      let endX = startX + candleSpace\n      let x = (startX + endX) / 2\n      let model = kLineDataList[i]\n      let high = model.high\n      let low = model.low\n\n      if (markHighestPrice < high) {\n        markHighestPrice = high\n        markHighestPriceX = x\n      }\n\n      if (low < markLowestPrice) {\n        markLowestPrice = low\n        markLowestPriceX = x\n      }\n\n      let openY = this.getValueY(model.open)\n      let closeY = this.getValueY(model.close)\n      let highY = this.getValueY(high)\n      let lowY = this.getValueY(low)\n      if (model.close > model.open) {\n        canvas.strokeStyle = this.candle.candleChart.increasingColor\n        canvas.fillStyle = this.candle.candleChart.increasingColor\n      } else {\n        canvas.strokeStyle = this.candle.candleChart.decreasingColor\n        canvas.fillStyle = this.candle.candleChart.decreasingColor\n      }\n\n      if (this.candle.candleChart.candleStyle !== CandleStyle.OHLC) {\n        let highLine = []\n        let lowLine = []\n        if (openY > closeY) {\n          highLine[0] = highY\n          highLine[1] = closeY\n          lowLine[0] = openY\n          lowLine[1] = lowY\n          rect = [startX, closeY, endX - startX, openY - closeY]\n        } else if (openY < closeY) {\n          highLine[0] = highY\n          highLine[1] = openY\n          lowLine[0] = closeY\n          lowLine[1] = lowY\n          rect = [startX, openY, endX - startX, closeY - openY]\n        } else {\n          highLine[0] = highY\n          highLine[1] = openY\n          lowLine[0] = closeY\n          lowLine[1] = lowY\n          rect = [startX, openY, endX - startX, 1]\n        }\n        canvas.beginPath()\n        canvas.moveTo(x, highLine[0])\n        canvas.lineTo(x, highLine[1])\n        canvas.stroke()\n        canvas.closePath()\n\n        canvas.beginPath()\n        canvas.moveTo(x, lowLine[0])\n        canvas.lineTo(x, lowLine[1])\n        canvas.stroke()\n        canvas.closePath()\n        switch (this.candle.candleChart.candleStyle) {\n          case CandleStyle.SOLID: {\n            canvas.fillRect(rect[0], rect[1], rect[2], rect[3])\n            break\n          }\n          case CandleStyle.STROKE: {\n            canvas.strokeRect(rect[0], rect[1], rect[2], rect[3])\n            break\n          }\n          case CandleStyle.INCREASING_STROKE: {\n            if (model.close > model.open) {\n              canvas.strokeRect(rect[0], rect[1], rect[2], rect[3])\n            } else {\n              canvas.fillRect(rect[0], rect[1], rect[2], rect[3])\n            }\n            break\n          }\n          case CandleStyle.DECREASING_STROKE: {\n            if (model.close > model.open) {\n              canvas.fillRect(rect[0], rect[1], rect[2], rect[3])\n            } else {\n              canvas.strokeRect(rect[0], rect[1], rect[2], rect[3])\n            }\n            break\n          }\n        }\n      } else {\n        this.drawOhlcLines(canvas, halfSpace, x, openY, closeY, highY, lowY)\n      }\n      startX += this.dataBounds.dataSpace\n      ++i\n    }\n    this.highestMarkData = { x: markHighestPriceX, price: markHighestPrice }\n    this.lowestMarkData = { x: markLowestPriceX, price: markLowestPrice }\n  }\n\n  /**\n   * 绘制最高价标记\n   * @param canvas\n   */\n  drawHighestPriceMark (canvas) {\n    let price = this.highestMarkData.price\n    if (price === Number.MIN_VALUE || !this.candle.highestPriceMark.display) {\n      return\n    }\n    let color = this.candle.highestPriceMark.color || this.candle.lowestHighestPriceMarkTextColor\n    let textSize = this.candle.highestPriceMark.textSize || this.candle.lowestHighestPriceMarkTextSize\n    let valueFormatter = this.candle.highestPriceMark.valueFormatter || this.candle.lowestHighestValueFormatter\n    this.drawLowestHighestPriceMark(canvas, this.highestMarkData.x, price, color, textSize, valueFormatter, true)\n  }\n\n  /**\n   * 绘制最低价标记\n   * @param canvas\n   */\n  drawLowestPriceMark (canvas) {\n    let price = this.lowestMarkData.price\n    if (price === Number.MAX_VALUE || !this.candle.lowestPriceMark.display) {\n      return\n    }\n    let color = this.candle.lowestPriceMark.color || this.candle.lowestHighestPriceMarkTextColor\n    let textSize = this.candle.lowestPriceMark.textSize || this.candle.lowestHighestPriceMarkTextSize\n    let valueFormatter = this.candle.lowestPriceMark.valueFormatter || this.candle.lowestHighestValueFormatter\n    this.drawLowestHighestPriceMark(canvas, this.lowestMarkData.x, price, color, textSize, valueFormatter)\n  }\n\n  /**\n   * 绘制最高最低价格标记\n   * @param canvas\n   * @param x\n   * @param price\n   * @param color\n   * @param textSize\n   * @param valueFormatter\n   * @param isHigh\n   */\n  drawLowestHighestPriceMark (canvas, x, price, color, textSize, valueFormatter, isHigh = false) {\n    canvas.save()\n    canvas.beginPath()\n    canvas.rect(\n      this.viewPortHandler.contentLeft(),\n      this.viewPortHandler.contentTop(),\n      this.viewPortHandler.contentRight() - this.viewPortHandler.contentLeft(),\n      this.chartTop + this.chartHeight\n    )\n    canvas.closePath()\n    canvas.clip()\n    let priceY = this.getValueY(price)\n    let startX = x\n    let startY = priceY + (isHigh ? -4 : 4)\n    canvas.textAlign = 'left'\n    canvas.lineWidth = 1\n    canvas.strokeStyle = color\n    canvas.fillStyle = color\n    canvas.beginPath()\n    canvas.moveTo(startX, startY)\n    canvas.lineTo(startX - 4, startY + (isHigh ? -4 : 4))\n    canvas.stroke()\n    canvas.closePath()\n\n    canvas.beginPath()\n    canvas.moveTo(startX, startY)\n    canvas.lineTo(startX + 4, startY + (isHigh ? -4 : 4))\n    canvas.stroke()\n    canvas.closePath()\n    // 绘制竖线\n    canvas.beginPath()\n    canvas.moveTo(startX, startY)\n    startY = startY + (isHigh ? -10 : 10)\n    canvas.lineTo(startX, startY)\n    canvas.stroke()\n    canvas.closePath()\n\n    canvas.beginPath()\n    canvas.moveTo(startX, startY)\n    canvas.lineTo(startX + 10, startY)\n    canvas.stroke()\n    canvas.closePath()\n\n    canvas.font = textSize * 2 + 'px Arial'\n    let value = price.toFixed(2)\n    if (valueFormatter) {\n      value = valueFormatter(price) + ''\n    }\n    canvas.fillText(value, startX + 14, priceY + (isHigh ? -textSize : textSize * 2))\n    canvas.restore()\n  }\n\n  /**\n   * 绘制最新价标记\n   * @param canvas\n   */\n  drawLastPriceMark (canvas) {\n    if (!this.candle.lastPriceMark.display || this.dataBounds.dataList.length === 0) {\n      return\n    }\n\n    let lastPrice = this.dataBounds.dataList[this.dataBounds.dataList.length - 1].close\n    let priceY = this.getValueY(lastPrice)\n    priceY = Math.max(this.chartTop + this.chartHeight * 0.05, Math.min(priceY, this.chartTop + this.chartHeight * 0.98))\n\n    canvas.strokeStyle = this.candle.lastPriceMark.lineColor\n    canvas.lineWidth = this.candle.lastPriceMark.lineSize\n    if (this.candle.lastPriceMark.lineStyle === LineStyle.DASH) {\n      canvas.setLineDash(this.candle.lastPriceMark.dashValue)\n    }\n    canvas.beginPath()\n    canvas.moveTo(this.viewPortHandler.contentLeft(), priceY)\n    canvas.lineTo(this.viewPortHandler.contentRight(), priceY)\n    canvas.stroke()\n    canvas.closePath()\n    canvas.setLineDash([])\n  }\n\n  /**\n   * 绘制分时线\n   * @param canvas\n   */\n  drawTimeLine (canvas) {\n    let timeLinePoints = []\n    let timeLineAreaPoints = [{ x: this.viewPortHandler.contentLeft(), y: this.chartTop + this.chartHeight }]\n    let averageLinePoints = []\n\n    canvas.lineWidth = this.candle.timeChart.timeLineSize\n\n    let kLineDataList = this.dataBounds.dataList\n    let startX = this.viewPortHandler.contentLeft()\n    let i = this.dataBounds.min\n    let dataSpace = this.dataBounds.dataSpace - this.dataBounds.dataMarginSpaceRate * this.dataBounds.dataSpace\n    while (i < this.dataBounds.dataList.length && i < this.dataBounds.min + this.dataBounds.range) {\n      let endX = startX + dataSpace\n      let x = (startX + endX) / 2\n      let model = kLineDataList[i]\n      let closeY = this.getValueY(model.close)\n      let averagePriceY = this.getValueY(model.averagePrice)\n      timeLinePoints.push({ x: x, y: closeY })\n      if (model.averagePrice) {\n        averageLinePoints.push({ x: x, y: averagePriceY })\n      }\n      if (i === this.dataBounds.min) {\n        timeLineAreaPoints.push({ x: this.viewPortHandler.contentLeft(), y: closeY })\n        timeLineAreaPoints.push({ x: x, y: closeY })\n      } else if (i === this.dataBounds.min + this.dataBounds.range - 1) {\n        timeLineAreaPoints.push({ x: x, y: closeY })\n        timeLineAreaPoints.push({ x: this.viewPortHandler.contentRight(), y: closeY })\n        timeLineAreaPoints.push({ x: this.viewPortHandler.contentRight(), y: this.chartHeight + this.chartTop })\n      } else if (i === this.dataBounds.dataList.length - 1) {\n        timeLineAreaPoints.push({ x: x, y: closeY })\n        timeLineAreaPoints.push({ x: x, y: this.chartTop + this.chartHeight })\n      } else {\n        timeLineAreaPoints.push({ x: x, y: closeY })\n      }\n      startX += this.dataBounds.dataSpace\n      ++i\n    }\n    if (timeLinePoints.length > 0) {\n      // 绘制分时线\n      canvas.strokeStyle = this.candle.timeChart.timeLineColor\n      canvas.beginPath()\n      canvas.moveTo(timeLinePoints[0].x, timeLinePoints[0].y)\n      for (let i = 1; i < timeLinePoints.length; i++) {\n        canvas.lineTo(timeLinePoints[i].x, timeLinePoints[i].y)\n      }\n      canvas.stroke()\n      canvas.closePath()\n    }\n\n    if (timeLineAreaPoints.length > 0) {\n      // 绘制分时线填充区域\n      canvas.fillStyle = this.candle.timeChart.timeLineFillColor\n      canvas.beginPath()\n      canvas.moveTo(timeLineAreaPoints[0].x, timeLineAreaPoints[0].y)\n      for (let i = 1; i < timeLineAreaPoints.length; i++) {\n        canvas.lineTo(timeLineAreaPoints[i].x, timeLineAreaPoints[i].y)\n      }\n      canvas.closePath()\n      canvas.fill()\n    }\n\n    if (averageLinePoints.length > 0) {\n      // 绘制均线\n      canvas.strokeStyle = this.candle.timeChart.timeAverageLineColor\n      canvas.beginPath()\n      canvas.moveTo(averageLinePoints[0].x, averageLinePoints[0].y)\n      for (let i = 1; i < averageLinePoints.length; i++) {\n        canvas.lineTo(averageLinePoints[i].x, averageLinePoints[i].y)\n      }\n      canvas.stroke()\n      canvas.closePath()\n    }\n  }\n}\n\nexport default CandleChart\n","import AxisChart from './AxisChart'\nimport { LineStyle } from '../component/Component'\nimport utils from '../utils/utils'\n\nclass XAxisChart extends AxisChart {\n  constructor (xAxis, dataBounds, viewPortHandler) {\n    super(dataBounds, viewPortHandler)\n    this.xAxis = xAxis\n  }\n\n  /**\n   * 绘制\n   * @param canvas\n   */\n  draw (canvas) {\n    this.computeAxis()\n    this.drawAxisLine(canvas)\n    this.drawTickLines(canvas)\n    this.drawAxisLabels(canvas)\n    this.drawSeparatorLines(canvas)\n  }\n\n  /**\n   * 绘制轴线\n   * @param canvas\n   */\n  drawAxisLine (canvas) {\n    if (!this.xAxis.display || !this.xAxis.axisLine.display) {\n      return\n    }\n    canvas.strokeStyle = this.xAxis.axisLine.color || this.xAxis.color\n    canvas.lineWidth = this.xAxis.axisLine.size\n    canvas.beginPath()\n    canvas.moveTo(this.viewPortHandler.contentLeft(), this.viewPortHandler.contentBottom())\n    canvas.lineTo(this.viewPortHandler.contentRight(), this.viewPortHandler.contentBottom())\n    canvas.stroke()\n    canvas.closePath()\n  }\n\n  /**\n   * 绘制坐标轴上的文字\n   * @param canvas Canvas\n   */\n  drawAxisLabels (canvas) {\n    if (!this.xAxis.display || !this.xAxis.tickText.display) {\n      return\n    }\n\n    canvas.font = this.xAxis.tickText.size * 2 + 'px Arial'\n    canvas.textAlign = 'center'\n    canvas.fillStyle = this.xAxis.tickText.color || this.xAxis.color\n\n    let positions = this.pointValuesToPixel()\n    let labelHeight = this.xAxis.tickText.size * 2\n    let startY = this.viewPortHandler.contentBottom() + this.xAxis.tickText.margin * 2 + labelHeight\n    if (this.display && this.xAxis.tickLine.display) {\n      startY += this.xAxis.tickLine.size * 2\n    }\n    let formatter = this.xAxis.tickText.valueFormatter\n    for (let i = 0; i < positions.length; i += 2) {\n      let x = positions[i]\n\n      if (this.viewPortHandler.isInBoundsX(x)) {\n        let kLineModel = this.dataBounds.dataList[parseInt(this.values[i / 2])]\n        let timestamp = kLineModel.timestamp\n        let label = utils.formatDate(timestamp)\n        if (formatter) {\n          label = formatter(kLineModel)\n        }\n        canvas.fillText(label, x, startY)\n      }\n    }\n  }\n\n  /**\n   * 绘制分割线\n   * @param canvas Canvas\n   */\n  drawSeparatorLines (canvas) {\n    if (!this.xAxis.display || !this.xAxis.separatorLine.display) {\n      return\n    }\n    canvas.strokeStyle = this.xAxis.separatorLine.color || this.xAxis.color\n    canvas.lineWidth = this.xAxis.separatorLine.size\n\n    if (this.xAxis.separatorLine.style === LineStyle.DASH) {\n      canvas.setLineDash(this.xAxis.separatorLine.dashValue)\n    }\n    let positions = this.pointValuesToPixel()\n\n    for (let i = 0; i < positions.length; i += 2) {\n      let x = positions[i]\n\n      if (this.viewPortHandler.isInBoundsX(x)) {\n        canvas.beginPath()\n        canvas.moveTo(x, this.viewPortHandler.contentTop())\n        canvas.lineTo(x, this.viewPortHandler.contentBottom())\n        canvas.stroke()\n        canvas.closePath()\n      }\n    }\n    canvas.setLineDash([])\n  }\n\n  /**\n   * 绘制tick线\n   * @param canvas Canvas\n   */\n  drawTickLines (canvas) {\n    if (!this.xAxis.display || !this.xAxis.tickLine.display) {\n      return\n    }\n    canvas.lineWidth = 1\n    canvas.strokeStyle = this.xAxis.axisLine.color || this.xAxis.color\n    let positions = this.pointValuesToPixel()\n\n    let startY = this.viewPortHandler.contentBottom()\n    let endY = startY + this.xAxis.tickLine.size * 2\n\n    for (let i = 0; i < positions.length; i += 2) {\n      let x = positions[i]\n\n      if (this.viewPortHandler.isInBoundsX(x)) {\n        canvas.beginPath()\n        canvas.moveTo(x, startY)\n        canvas.lineTo(x, endY)\n        canvas.stroke()\n        canvas.closePath()\n      }\n    }\n  }\n\n  /**\n   * 获取值对应的坐标点值\n   * @return Array\n   */\n  pointValuesToPixel () {\n    let positions = []\n    for (let i = 0; i < this.valueCount * 2; i += 2) {\n      let pos = this.values[i / 2]\n      positions[i] = (pos - this.dataBounds.min) * this.dataBounds.dataSpace + this.dataBounds.dataSpace * (1 - this.dataBounds.dataMarginSpaceRate) / 2\n    }\n    return positions\n  }\n\n  computeAxis () {\n    let dataMin = this.dataBounds.min\n    let max = Math.min(dataMin + this.dataBounds.range - 1, this.dataBounds.dataList.length - 1)\n    this.computeAxisValues(dataMin, max)\n  }\n}\n\nexport default XAxisChart\n","import { LineStyle } from './Component'\n\n/**\n * 指标提示显示规则\n */\nexport const IndicatorDisplayRule = {\n  /**\n   * 总是显示\n   */\n  ALWAYS: 'always',\n  /**\n   * 跟随十字光标显示\n   */\n  FOLLOW_CROSS: 'follow_cross',\n\n  /**\n   * 一直不显示\n   */\n  NONE: 'none'\n}\n\nclass Tooltip {\n  constructor () {\n    /**\n     * 文字大小\n     */\n    this.textSize = 12\n\n    /**\n     * 光标线配置\n     */\n    this.crossLine = {\n      style: LineStyle.SOLID,\n      dashValue: [8, 8],\n      size: 1,\n      color: '#505050',\n      text: {\n        color: '#EDEDED',\n        size: 12,\n        rectStrokeLineSize: 1,\n        rectStrokeLineColor: '#EDEDED',\n        rectFillColor: '#505050',\n        margin: 4,\n        valueFormatter: null\n      }\n    }\n\n    /**\n     * 基础数据显示配置\n     */\n    this.generalData = {\n      labels: ['时间', '开', '收', '高', '低'],\n      values: null,\n      valueFormatter: null,\n      text: {\n        size: 12,\n        color: '#898989',\n        margin: 20\n      }\n    }\n\n    /**\n     * 指标数据显示配置\n     */\n    this.indicatorData = {\n      displayRule: IndicatorDisplayRule.ALWAYS,\n      valueFormatter: null,\n      text: {\n        size: 12,\n        margin: 20\n      }\n    }\n  }\n}\n\nexport default Tooltip\n","import Chart from './Chart'\nimport { IndicatorDisplayRule } from '../component/Tooltip'\nimport { ChartStyle } from '../component/Candle'\nimport { YAxisPosition, YAxisTextPosition } from '../component/YAxis'\nimport { LineStyle } from '../component/Component'\nimport { IndicatorType } from '../component/Indicator'\nimport utils from '../utils/utils'\n\nclass TooltipChart extends Chart {\n  constructor (tooltip, candle, indicator, yAxis, candleChart, volChart, indicatorChart, dataBounds, viewPortHandler) {\n    super(dataBounds, viewPortHandler)\n    this.displayCross = false\n    this.crossPoint = { x: 0, y: 0 }\n    this.tooltip = tooltip\n    this.candle = candle\n    this.indicator = indicator\n    this.yAxis = yAxis\n    this.candleChart = candleChart\n    this.volChart = volChart\n    this.indicatorChart = indicatorChart\n\n    this.yAxisLabelStrokePathPoints = []\n  }\n\n  draw (canvas) {\n    if (this.dataBounds.currentDataPos < this.dataBounds.dataList.length) {\n      let kLineModel = this.dataBounds.dataList[this.dataBounds.currentDataPos]\n      if (this.displayCross) {\n        this.crossPoint.x = this.viewPortHandler.contentLeft() +\n          this.dataBounds.dataSpace * (this.dataBounds.currentDataPos - this.dataBounds.min) +\n          this.dataBounds.dataSpace * (1 - this.dataBounds.dataMarginSpaceRate) / 2\n        canvas.font = (this.tooltip.crossLine.text.size || this.tooltip.textSize) * 2 + 'px Arial'\n\n        this.drawCrossHorizontalLine(canvas)\n        this.drawCrossVerticalLine(canvas, kLineModel)\n      }\n\n      if (this.tooltip.indicatorData.displayRule === IndicatorDisplayRule.ALWAYS ||\n        (this.tooltip.indicatorData.displayRule === IndicatorDisplayRule.FOLLOW_CROSS && this.displayCross)) {\n        let textHeight = (this.tooltip.indicatorData.text.size || this.tooltip.textSize) * 2\n        let startX = this.viewPortHandler.contentLeft() + 10\n        canvas.font = textHeight + 'px Arial'\n        this.drawGeneralDataTooltip(canvas, startX, kLineModel)\n        if (this.candle.chartStyle !== ChartStyle.TIME_LINE) {\n          // 绘制主图的指标提示文字\n          this.drawIndicatorTooltip(\n            canvas, startX,\n            this.candleChart.chartTop + 10 + textHeight + 10 + (this.tooltip.generalData.text.size || this.tooltip.textSize) * 2,\n            kLineModel, this.candleChart.indicatorType\n          )\n        }\n        // 绘制成交量指标提示文字\n        this.drawIndicatorTooltip(\n          canvas, startX,\n          this.volChart.chartTop + 4 + textHeight,\n          kLineModel, this.volChart.indicatorType\n        )\n        // 绘制副图指标提示文字\n        this.drawIndicatorTooltip(\n          canvas, startX,\n          this.indicatorChart.chartTop + 4 + textHeight,\n          kLineModel, this.indicatorChart.indicatorType\n        )\n      }\n    }\n  }\n\n  /**\n   * 绘制水平线\n   * @param canvas Canvas\n   */\n  drawCrossHorizontalLine (canvas) {\n    let yAxisDataLabel = this.getCrossYAxisLabel()\n    if (yAxisDataLabel == null) {\n      return\n    }\n    let isDrawYAxisTextOutside = this.yAxis.tickText.position === YAxisTextPosition.OUTSIDE\n    let textSize = this.tooltip.crossLine.text.size || this.tooltip.textSize\n    let yAxisDataLabelWidth = utils.calcTextWidth(textSize * 2 + 'px Arial', yAxisDataLabel)\n    let halfLabelHeight = textSize\n    let labelStartX\n    let labelStartY = this.crossPoint.y + halfLabelHeight\n\n    let lineStartX = this.viewPortHandler.contentLeft()\n    let lineEndX = this.viewPortHandler.contentRight()\n\n    let centerPoint = this.viewPortHandler.getContentCenter()\n\n    let crossTextMarginSpace = this.tooltip.crossLine.text.margin\n    let rectStrokeLineSize = this.tooltip.crossLine.text.rectStrokeLineSize\n\n    if (isDrawYAxisTextOutside) {\n      if (this.yAxis.yAxisPosition === YAxisPosition.LEFT) {\n        labelStartX = lineStartX - rectStrokeLineSize - crossTextMarginSpace * 2 - yAxisDataLabelWidth\n      } else {\n        labelStartX = lineEndX + rectStrokeLineSize + crossTextMarginSpace * 2\n      }\n    } else {\n      if (this.crossPoint.x > centerPoint.x) {\n        // 左边\n        lineStartX = this.viewPortHandler.contentLeft() +\n          rectStrokeLineSize * 2 + crossTextMarginSpace * 3 + yAxisDataLabelWidth\n        labelStartX = this.viewPortHandler.contentLeft() + rectStrokeLineSize + crossTextMarginSpace\n      } else {\n        lineEndX = this.viewPortHandler.contentRight() - rectStrokeLineSize * 2 - crossTextMarginSpace * 3 - yAxisDataLabelWidth\n        labelStartX = lineEndX + rectStrokeLineSize + crossTextMarginSpace * 2\n      }\n    }\n\n    if ((!isDrawYAxisTextOutside && this.crossPoint.x > centerPoint.x) ||\n      (isDrawYAxisTextOutside && this.yAxis.yAxisPosition === YAxisPosition.LEFT)) {\n      // 左边\n      this.yAxisLabelStrokePathPoints[0] = { x: lineStartX, y: this.crossPoint.y }\n      this.yAxisLabelStrokePathPoints[1] = {\n        x: lineStartX - crossTextMarginSpace,\n        y: this.crossPoint.y - halfLabelHeight - crossTextMarginSpace\n      }\n      this.yAxisLabelStrokePathPoints[2] = {\n        x: lineStartX - crossTextMarginSpace * 3 - yAxisDataLabelWidth,\n        y: this.yAxisLabelStrokePathPoints[1].y\n      }\n      this.yAxisLabelStrokePathPoints[3] = {\n        x: this.yAxisLabelStrokePathPoints[2].x,\n        y: this.crossPoint.y + halfLabelHeight + crossTextMarginSpace\n      }\n      this.yAxisLabelStrokePathPoints[4] = {\n        x: this.yAxisLabelStrokePathPoints[1].x,\n        y: this.yAxisLabelStrokePathPoints[3].y\n      }\n    } else {\n      // 右边\n      this.yAxisLabelStrokePathPoints[0] = { x: lineEndX, y: this.crossPoint.y }\n      this.yAxisLabelStrokePathPoints[1] = {\n        x: lineEndX + crossTextMarginSpace,\n        y: this.crossPoint.y - halfLabelHeight - crossTextMarginSpace\n      }\n      this.yAxisLabelStrokePathPoints[2] = {\n        x: lineEndX + crossTextMarginSpace * 3 + yAxisDataLabelWidth,\n        y: this.yAxisLabelStrokePathPoints[1].y\n      }\n      this.yAxisLabelStrokePathPoints[3] = {\n        x: this.yAxisLabelStrokePathPoints[2].x,\n        y: this.crossPoint.y + halfLabelHeight + crossTextMarginSpace\n      }\n      this.yAxisLabelStrokePathPoints[4] = {\n        x: this.yAxisLabelStrokePathPoints[1].x,\n        y: this.yAxisLabelStrokePathPoints[3].y\n      }\n    }\n\n    // 绘制十字光标垂直线\n    canvas.lineWidth = this.tooltip.crossLine.size\n    canvas.strokeStyle = this.tooltip.crossLine.color\n    if (this.tooltip.crossLine.style === LineStyle.DASH) {\n      canvas.setLineDash(this.tooltip.crossLine.dashValue)\n    }\n    canvas.beginPath()\n    canvas.moveTo(lineStartX, this.crossPoint.y)\n    canvas.lineTo(lineEndX, this.crossPoint.y)\n    canvas.stroke()\n    canvas.closePath()\n    canvas.setLineDash([])\n\n    // 绘制y轴文字外的边框\n    canvas.fillStyle = this.tooltip.crossLine.rectFillColor\n    canvas.beginPath()\n    canvas.moveTo(this.yAxisLabelStrokePathPoints[0].x, this.yAxisLabelStrokePathPoints[0].y)\n    for (let i = 1; i < this.yAxisLabelStrokePathPoints.length; i++) {\n      canvas.lineTo(this.yAxisLabelStrokePathPoints[i].x, this.yAxisLabelStrokePathPoints[i].y)\n    }\n    canvas.closePath()\n    canvas.fill()\n\n    canvas.lineWidth = this.tooltip.crossLine.rectStrokeLineSize\n    canvas.strokeStyle = this.tooltip.crossLine.rectStrokeLineColor\n    canvas.beginPath()\n    canvas.moveTo(this.yAxisLabelStrokePathPoints[0].x, this.yAxisLabelStrokePathPoints[0].y)\n    for (let i = 1; i < this.yAxisLabelStrokePathPoints.length; i++) {\n      canvas.lineTo(this.yAxisLabelStrokePathPoints[i].x, this.yAxisLabelStrokePathPoints[i].y)\n    }\n    canvas.closePath()\n    canvas.stroke()\n\n    canvas.fillStyle = this.tooltip.crossLine.text.color\n    canvas.fillText(yAxisDataLabel, labelStartX, labelStartY)\n  }\n\n  /**\n   * 获取十字光标y轴上的文字\n   */\n  getCrossYAxisLabel () {\n    let candleChartYAxis = this.candleChart.yAxisChart\n    let candleChartHeight = candleChartYAxis.chartHeight\n    let candleChartTop = candleChartYAxis.chartTop\n\n    let volChartYAxis = this.volChart.yAxisChart\n    let volChartHeight = volChartYAxis.chartHeight\n    let volChartTop = volChartYAxis.chartTop\n\n    let indicatorChartYAxis = this.indicatorChart.yAxisChart\n    let indicatorChartHeight = indicatorChartYAxis.chartHeight\n    let indicatorChartTop = indicatorChartYAxis.chartTop\n\n    let eventY = this.crossPoint.y\n    if (eventY > candleChartTop && eventY < (candleChartHeight + candleChartTop)) {\n      let candleChartYAxisDataMin = candleChartYAxis.axisMinimum\n      let candleChartYAxisDataMax = candleChartYAxis.axisMaximum\n      let yData = (1 - (eventY - candleChartTop) / candleChartHeight) * (candleChartYAxisDataMax - candleChartYAxisDataMin) + candleChartYAxisDataMin\n      let text = yData.toFixed(2)\n      if (this.tooltip.crossLine.text.valueFormatter) {\n        text = this.tooltip.crossLine.text.valueFormatter('y', yData) || '--'\n      }\n      return text\n    } else if (eventY > volChartTop && eventY < volChartTop + volChartHeight) {\n      let volIndicatorChartYAxisDataMin = volChartYAxis.axisMinimum\n      let volIndicatorChartYAxisDataMax = volChartYAxis.axisMaximum\n      let yData = (1 - (eventY - volChartTop) / volChartHeight) * (volIndicatorChartYAxisDataMax - volIndicatorChartYAxisDataMin) + volIndicatorChartYAxisDataMin\n      let text = yData.toFixed(0)\n      if (this.tooltip.crossLine.text.valueFormatter) {\n        text = this.tooltip.crossLine.text.valueFormatter('y', yData) || '--'\n      }\n      return text\n    } else if (eventY > indicatorChartTop && eventY < indicatorChartTop + indicatorChartHeight) {\n      let indicatorChartYAxisDataMin = indicatorChartYAxis.axisMinimum\n      let indicatorChartYAxisDataMax = indicatorChartYAxis.axisMaximum\n      let yData = (1 - (eventY - indicatorChartTop) / indicatorChartHeight) * (indicatorChartYAxisDataMax - indicatorChartYAxisDataMin) + indicatorChartYAxisDataMin\n      let text = yData.toFixed(2)\n      if (this.indicatorChart.indicatorType === IndicatorType.VOL) {\n        text = yData.toFixed(0)\n      }\n      if (this.tooltip.crossLine.text.valueFormatter) {\n        text = this.tooltip.crossLine.text.valueFormatter('y', yData) || '--'\n      }\n      return text\n    }\n    return null\n  }\n\n  /**\n   * 绘制十字光标垂直线\n   * @param canvas Canvas\n   * @param kLineModel KLineModel\n   */\n  drawCrossVerticalLine (canvas, kLineModel) {\n    canvas.lineWidth = this.tooltip.crossLine.size\n    canvas.strokeStyle = this.tooltip.crossLine.color\n\n    if (this.tooltip.crossLine.style === LineStyle.DASH) {\n      canvas.setLineDash(this.tooltip.crossLine.dashValue)\n    }\n\n    canvas.beginPath()\n    canvas.moveTo(this.crossPoint.x, this.viewPortHandler.contentTop())\n    canvas.lineTo(this.crossPoint.x, this.viewPortHandler.contentBottom())\n    canvas.stroke()\n    canvas.closePath()\n    canvas.setLineDash([])\n\n    let timestamp = kLineModel.timestamp\n    let label = utils.formatDate(timestamp)\n    if (this.tooltip.crossLine.text.valueFormatter) {\n      label = this.tooltip.crossLine.text.valueFormatter('x', kLineModel) || '--'\n    }\n    let textSize = this.tooltip.crossLine.text.size || this.tooltip.textSize\n    let labelWidth = utils.calcTextWidth(textSize * 2 + 'px Arial', label)\n    let xAxisLabelX = this.crossPoint.x - labelWidth / 2\n    let crossTextMarginSpace = this.tooltip.crossLine.text.margin\n    let rectStrokeLineSize = this.tooltip.crossLine.text.rectStrokeLineSize\n    // 保证整个x轴上的提示文字总是完全显示\n    if (xAxisLabelX < this.viewPortHandler.contentLeft() + crossTextMarginSpace + rectStrokeLineSize) {\n      xAxisLabelX = this.viewPortHandler.contentLeft()\n    } else if (xAxisLabelX > this.viewPortHandler.contentRight() - labelWidth - rectStrokeLineSize) {\n      xAxisLabelX = this.viewPortHandler.contentRight() - labelWidth - rectStrokeLineSize\n    }\n\n    let rectLeft = xAxisLabelX - rectStrokeLineSize - crossTextMarginSpace\n    let rectTop = this.viewPortHandler.contentBottom()\n    let rectRight = xAxisLabelX + labelWidth + crossTextMarginSpace + rectStrokeLineSize\n    let rectBottom = this.viewPortHandler.contentBottom() + textSize * 2 + rectStrokeLineSize + crossTextMarginSpace * 2\n    canvas.fillStyle = this.tooltip.crossLine.text.rectFillColor\n    canvas.fillRect(rectLeft, rectTop, rectRight - rectLeft, rectBottom - rectTop)\n\n    canvas.lineWidth = rectStrokeLineSize\n    canvas.strokeStyle = this.tooltip.crossLine.rectStrokeLineColor\n    canvas.strokeRect(rectLeft, rectTop, rectRight - rectLeft, rectBottom - rectTop)\n\n    // 绘制轴上的提示文字\n    canvas.fillStyle = this.tooltip.crossLine.text.color\n    canvas.fillText(\n      label,\n      xAxisLabelX,\n      this.viewPortHandler.contentBottom() + textSize * 2 + rectStrokeLineSize + crossTextMarginSpace\n    )\n  }\n\n  /**\n   * 绘制基础数据提示\n   * @param canvas\n   * @param startX\n   * @param kLineModel\n   */\n  drawGeneralDataTooltip (canvas, startX, kLineModel) {\n    let textSize = this.tooltip.generalData.text.size || this.tooltip.textSize\n    canvas.font = textSize * 2 + 'px Arial'\n    let textColor = this.tooltip.generalData.text.color\n    let values = []\n    if (this.tooltip.generalData.values) {\n      values = this.tooltip.generalData.values(kLineModel) || []\n    } else {\n      let formatter = this.tooltip.generalData.valueFormatter\n      let time = utils.formatDate(kLineModel.timestamp)\n      let open = kLineModel.open.toFixed(2)\n      let close = kLineModel.close.toFixed(2)\n      let high = kLineModel.high.toFixed(2)\n      let low = kLineModel.low.toFixed(2)\n      if (formatter) {\n        time = formatter(0, kLineModel.timestamp) || '--'\n        open = formatter(1, kLineModel.open) || '--'\n        close = formatter(2, kLineModel.close) || '--'\n        high = formatter(3, kLineModel.high) || '--'\n        low = formatter(4, kLineModel.low) || '--'\n      }\n      values = [time, open, close, high, low]\n    }\n    let labels = this.tooltip.generalData.labels\n    for (let i = 0; i < labels.length; i++) {\n      let label = (labels[i] || '--') + ': '\n      let labelWidth = utils.calcTextWidth(textSize * 2 + 'px Arial', label)\n      canvas.fillStyle = textColor\n      canvas.fillText(label, startX, textSize * 2 + 4)\n      startX += labelWidth\n\n      let value = values[i] || '--'\n      let text\n      if (typeof value === 'object') {\n        text = value.value || '--'\n        canvas.fillStyle = value.color || textColor\n      } else {\n        canvas.fillStyle = textColor\n        text = value\n      }\n      let textWidth = utils.calcTextWidth(textSize * 2 + 'px Arial', text)\n      canvas.fillText(text, startX, textSize * 2 + 4)\n      startX += textWidth + this.tooltip.generalData.text.margin\n    }\n  }\n\n  /**\n   * 绘制指标提示文字\n   * @param canvas\n   * @param startX\n   * @param startY\n   * @param kLineModel\n   * @param indicatorType\n   */\n  drawIndicatorTooltip (canvas, startX, startY, kLineModel, indicatorType) {\n    switch (indicatorType) {\n      case IndicatorType.MA: {\n        let maData = kLineModel.ma\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [maData.ma5, maData.ma10, maData.ma20, maData.ma60],\n          ['MA5', 'MA10', 'MA20', 'MA60'],\n          kLineModel, IndicatorType.MA\n        )\n        break\n      }\n      case IndicatorType.MACD: {\n        let macdData = kLineModel.macd\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [macdData.diff, macdData.dea, macdData.macd],\n          ['DIFF', 'DEA', 'MACD'],\n          kLineModel, IndicatorType.MACD\n        )\n        break\n      }\n      case IndicatorType.VOL: {\n        let volData = kLineModel.vol\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [volData.ma5, volData.ma10, volData.ma20, volData.num],\n          ['MA5', 'MA10', 'MA20', 'VOLUME'],\n          kLineModel, IndicatorType.VOL\n        )\n        break\n      }\n      case IndicatorType.BOLL: {\n        let bollData = kLineModel.boll\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [bollData.up, bollData.mid, bollData.dn],\n          ['UP', 'MID', 'DN'],\n          kLineModel, IndicatorType.BOLL\n        )\n        break\n      }\n      case IndicatorType.BIAS: {\n        let biasData = kLineModel.bias\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [biasData.bias1, biasData.bias2, biasData.bias3],\n          ['BIAS6', 'BIAS12', 'BIAS24'],\n          kLineModel, IndicatorType.BIAS\n        )\n        break\n      }\n      case IndicatorType.BRAR: {\n        let brarData = kLineModel.brar\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [brarData.br, brarData.ar],\n          ['BR', 'AR'],\n          kLineModel, IndicatorType.BRAR\n        )\n        break\n      }\n      case IndicatorType.CCI: {\n        let cciData = kLineModel.cci\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [cciData.cci],\n          ['CCI'],\n          kLineModel, IndicatorType.CCI\n        )\n        break\n      }\n      case IndicatorType.CR: {\n        let crData = kLineModel.cr\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [crData.cr, crData.ma1, crData.ma2, crData.ma3, crData.ma4],\n          ['CR', 'MA1', 'MA2', 'MA3', 'MA4'],\n          kLineModel, IndicatorType.CR\n        )\n        break\n      }\n      case IndicatorType.DMA: {\n        let dmaData = kLineModel.dma\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [dmaData.dif, dmaData.difMa],\n          ['DIF', 'DIFMA'],\n          kLineModel, IndicatorType.DMA\n        )\n        break\n      }\n      case IndicatorType.DMI: {\n        let dmiData = kLineModel.dmi\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [dmiData.mdi, dmiData.pdi, dmiData.adx, dmiData.adxr],\n          ['MDI', 'PDI', 'ADX', 'ADXR'],\n          kLineModel, IndicatorType.DMI\n        )\n        break\n      }\n      case IndicatorType.KDJ: {\n        let kdjData = kLineModel.kdj\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [kdjData.k, kdjData.d, kdjData.j],\n          ['K', 'D', 'J'],\n          kLineModel, IndicatorType.KDJ\n        )\n        break\n      }\n      case IndicatorType.KD: {\n        let kdjData = kLineModel.kdj\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [kdjData.k, kdjData.d],\n          ['K', 'D'],\n          kLineModel, IndicatorType.KDJ\n        )\n        break\n      }\n      case IndicatorType.RSI: {\n        let rsiData = kLineModel.rsi\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [rsiData.rsi1, rsiData.rsi2, rsiData.rsi3],\n          ['RSI6', 'RSI12', 'RSI24'],\n          kLineModel, IndicatorType.RSI\n        )\n        break\n      }\n      case IndicatorType.PSY: {\n        let psyData = kLineModel.psy\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [psyData.psy],\n          ['PSY'],\n          kLineModel, IndicatorType.PSY\n        )\n        break\n      }\n      case IndicatorType.TRIX: {\n        let trixData = kLineModel.trix\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [trixData.trix, trixData.maTrix],\n          ['TRIX', 'MATRIX'],\n          kLineModel, IndicatorType.TRIX\n        )\n        break\n      }\n      case IndicatorType.OBV: {\n        let obvData = kLineModel.obv\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [obvData.obv, obvData.maObv],\n          ['OBV', 'MAOBV'],\n          kLineModel, IndicatorType.OBV\n        )\n        break\n      }\n      case IndicatorType.VR: {\n        let vrModel = kLineModel.vr\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [vrModel.vr, vrModel.maVr],\n          ['VR', 'MAVR'],\n          kLineModel, IndicatorType.VR\n        )\n        break\n      }\n      case IndicatorType.WR: {\n        let wrModel = kLineModel.wr\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [wrModel.wr1, wrModel.wr2, wrModel.wr3],\n          ['WR1', 'WR2', 'WR3'],\n          kLineModel, IndicatorType.WR\n        )\n        break\n      }\n      case IndicatorType.MTM: {\n        let mtmModel = kLineModel.mtm\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [mtmModel.mtm, mtmModel.mtmMa],\n          ['MTM', 'MTMMA'],\n          kLineModel, IndicatorType.MTM\n        )\n        break\n      }\n\n      case IndicatorType.EMV: {\n        let emvModel = kLineModel.emv\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [emvModel.emv, emvModel.maEmv],\n          ['EMV', 'MAEMV'],\n          kLineModel, IndicatorType.EMV\n        )\n        break\n      }\n\n      case IndicatorType.SAR: {\n        let sarModel = kLineModel.sar\n        this.drawIndicatorTooltipLabels(\n          canvas, startX, startY,\n          [sarModel.sar],\n          ['SAR'],\n          kLineModel, IndicatorType.SAR\n        )\n        break\n      }\n    }\n  }\n\n  /**\n   * 绘制指标提示文字\n   * @param canvas\n   * @param startX\n   * @param startY\n   * @param values\n   * @param labels\n   * @param kLineModel\n   * @param indicatorType\n   */\n  drawIndicatorTooltipLabels (canvas, startX, startY, values, labels, kLineModel, indicatorType) {\n    let labelX = startX\n    for (let i = 0; i < values.length; i++) {\n      let value = values[i]\n      let valueStr = '--'\n      if (value || value === 0) {\n        if (indicatorType === IndicatorType.VOL) {\n          valueStr = value.toFixed(0)\n        } else {\n          valueStr = value.toFixed(2)\n        }\n      }\n      if (this.tooltip.indicatorData.valueFormatter) {\n        valueStr = this.tooltip.indicatorData.valueFormatter(indicatorType, value) || '--'\n      }\n\n      let text = labels[i] + ': ' + valueStr\n      let textWidth = utils.calcTextWidth((this.tooltip.indicatorData.text.size || this.tooltip.textSize) * 2 + 'px Arial', text)\n      canvas.fillStyle = this.indicator.lineColors[i]\n      canvas.fillText(text, labelX, startY)\n      labelX += this.tooltip.indicatorData.text.margin + textWidth\n    }\n  }\n\n  /**\n   * 设置会否显示cross\n   */\n  setCross (y, display) {\n    this.crossPoint.y = y\n    this.displayCross = display\n  }\n}\n\nexport default TooltipChart\n","import Axis from './Axis'\n\nclass XAxis extends Axis {\n  constructor () {\n    super()\n    /**\n     * x轴最大高度\n     */\n    this.xAxisMaxHeight = 20\n\n    /**\n     * x轴最小高度\n     */\n    this.xAxisMinHeight = 20\n  }\n\n  /**\n   * 计算x轴需要的高度\n   * @return number\n   */\n  getRequiredHeightSpace () {\n    let height = this.tickText.size * 2 + this.tickText.margin * 2\n    if (this.display && this.tickLine.display) {\n      height += this.tickLine.size * 2\n    }\n    if (this.display && this.axisLine.display) {\n      height += this.axisLine.size\n    }\n    let maxHeight = height\n    if (this.xAxisMaxHeight > 0) {\n      maxHeight = this.xAxisMaxHeight * 2\n    }\n    height = Math.max(this.xAxisMinHeight * 2, Math.min(height, maxHeight))\n\n    return height\n  }\n}\n\nexport default XAxis\n","class Grid {\n  constructor () {\n    this.display = true\n\n    /**\n     * 边框线尺寸\n     */\n    this.lineSize = 1\n\n    /**\n     * 边框线颜色\n     */\n    this.lineColor = '#707070'\n  }\n}\n\nexport default Grid\n","class Event {\n  constructor (kline, dataBounds, viewPortHandler) {\n    this.kline = kline\n    this.dataBounds = dataBounds\n    this.viewPortHandler = viewPortHandler\n  }\n\n  /**\n   * 是否是有效事件\n   * @param point\n   * @returns {boolean}\n   */\n  isValidEvent (point) {\n    return !(point.x < this.viewPortHandler.contentLeft() ||\n      point.x > this.viewPortHandler.contentRight() ||\n      point.y < this.viewPortHandler.contentTop() ||\n      point.y > this.viewPortHandler.contentBottom())\n  }\n}\n\nexport default Event\n","import Event from './Event'\nconst CROSS = 'cross'\nconst DRAG = 'drag'\n\nclass MouseEvent extends Event {\n  constructor (kline, dataBounds, viewPortHandler) {\n    super(kline, dataBounds, viewPortHandler)\n    // 事件模型\n    this.mouseMode = CROSS\n    this.mouseDownPoint = { x: 0, y: 0 }\n  }\n\n  /**\n   * 鼠标按下时事件\n   * @param e\n   */\n  mouseDown (e) {\n    let point = this.getCanvasPoint(e)\n    if (!this.isValidEvent(point)) {\n      return\n    }\n    this.mouseMode = DRAG\n    this.mouseDownPoint.x = e.x\n    this.mouseDownPoint.y = e.y\n    this.kline.tooltipChart.setCross(point.y, false)\n    this.kline.freshen()\n  }\n\n  /**\n   * 鼠标抬起时事件\n   * @param e\n   */\n  mouseUp (e) {\n    let point = this.getCanvasPoint(e)\n    if (!this.isValidEvent(point)) {\n      return\n    }\n    this.mouseMode = CROSS\n    this.kline.tooltipChart.setCross(point.y, true)\n    this.kline.freshen()\n  }\n\n  mouseLeave (e) {\n    let point = this.getCanvasPoint(e)\n    this.kline.tooltipChart.setCross(point.y, false)\n    this.kline.freshen()\n  }\n\n  /**\n   * 鼠标移动时事件\n   * @param e\n   */\n  mouseMove (e) {\n    let point = this.getCanvasPoint(e)\n    if (!this.isValidEvent(point)) {\n      this.kline.tooltipChart.setCross(point.y, false)\n      this.kline.freshen()\n      return\n    }\n    if (this.mouseMode === DRAG) {\n      let moveDist = e.x - this.mouseDownPoint.x\n      if (moveDist > this.dataBounds.dataSpace / 2) {\n        if (this.dataBounds.min === 0 || this.dataBounds.dataList.length < this.dataBounds.range) {\n          return false\n        }\n\n        this.mouseDownPoint.x = e.x\n\n        let moveRange = +Math.abs(moveDist / this.dataBounds.dataSpace).toFixed(0)\n        if (moveRange === 0) {\n          moveRange = 1\n        }\n\n        this.dataBounds.min -= moveRange\n        if (this.dataBounds.min <= 0) {\n          this.dataBounds.min = 0\n        }\n        this.kline.freshen()\n      } else if (moveDist < 0 - this.dataBounds.dataSpace / 2) {\n        if (this.dataBounds.min + this.dataBounds.range === this.dataBounds.dataList.length || this.dataBounds.dataList.length < this.dataBounds.range) {\n          return false\n        }\n\n        this.mouseDownPoint.x = e.x\n\n        let moveRange = +Math.abs(moveDist / this.dataBounds.dataSpace).toFixed(0)\n        if (moveRange === 0) {\n          moveRange = 1\n        }\n\n        this.dataBounds.min += moveRange\n        if (this.dataBounds.min >= this.dataBounds.dataList.length - this.dataBounds.range) {\n          this.dataBounds.min = this.dataBounds.dataList.length - this.dataBounds.range\n        }\n        this.kline.freshen()\n      }\n    } else if (this.mouseMode === CROSS) {\n      this.dataBounds.calcCurrentDataIndex(point.x)\n      this.kline.tooltipChart.setCross(point.y, true)\n      this.kline.freshen()\n    }\n  }\n\n  /**\n   * 鼠标滚轮事件\n   * @param e\n   */\n  mouseWheel (e) {\n    let touchStartPosition = this.dataBounds.min\n    let touchRange = this.dataBounds.range\n    let delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)))\n    // 是否缩小\n    let isZoomingOut = delta === 1\n    let scaleX = 1\n\n    if (isZoomingOut) {\n      scaleX = 0.95\n      if (this.dataBounds.range >= this.dataBounds.maxRange) {\n        // 无法继续缩小\n        return false\n      }\n    } else {\n      scaleX = 1.05\n      if (this.dataBounds.range <= this.dataBounds.minRange) {\n        // 无法继续放大\n        return false\n      }\n    }\n\n    // 计算缩放后的range大小\n    this.dataBounds.range = +(touchRange / scaleX).toFixed(0)\n\n    this.dataBounds.range = Math.min(Math.max(this.dataBounds.range, this.dataBounds.minRange), this.dataBounds.maxRange)\n\n    this.dataBounds.min = touchStartPosition + touchRange - this.dataBounds.range\n    if (this.dataBounds.min + this.dataBounds.range > this.dataBounds.dataList.length) {\n      this.dataBounds.min = 0\n    }\n    if (this.dataBounds.min < 0) {\n      this.dataBounds.min = 0\n    }\n    this.kline.freshen()\n  }\n\n  /**\n   * 获取事件对应画布上的点\n   * @param e\n   * @returns {{x: number, y: number}}\n   */\n  getCanvasPoint (e) {\n    let rect = this.kline.canvasDom.getBoundingClientRect()\n    let x = Math.round(e.clientX - rect.left)\n    let y = Math.round(e.clientY - rect.top)\n    return { x: x * 2, y: y * 2 }\n  }\n}\n\nexport default MouseEvent\n","import Event from './Event'\n/**\n * 无\n */\nconst TOUCH_NO = 0\n\n/**\n * 拖拽\n */\nconst TOUCH_DRAG = 1\n\n/**\n * 缩放\n */\nconst TOUCH_ZOOM = 2\n\n/**\n *\n */\nconst TOUCH_POST_ZOOM = 3\n\n/**\n * 十字光标\n */\nconst TOUCH_CROSS = 4\n\n/**\n * 十字光标取消\n */\nconst TOUCH_CROSS_CANCEL = 5\n\nclass TouchEvent extends Event {\n  constructor (kline, dataBounds, viewPortHandler) {\n    super(kline, dataBounds, viewPortHandler)\n    // 事件模型\n    this.touchMode = TOUCH_NO\n    this.touchStartPoint = { x: 0, y: 0 }\n    this.touchMovePoint = { x: 0, y: 0 }\n    this.touchCrossPoint = { x: 0, y: 0 }\n    this.savedDist = 1\n    this.savedXDist = 1\n    this.touchRange = this.dataBounds.range\n    this.touchStartPosition = this.dataBounds.min\n\n    this.delayTimeout = null\n    this.delayActiveCross = () => {\n      if (this.touchMode === TOUCH_NO || this.touchMode === TOUCH_CROSS_CANCEL) {\n        if (this.kline) {\n          this.touchMode = TOUCH_CROSS\n          this.touchCrossPoint = { x: this.touchStartPoint.x, y: this.touchStartPoint.y }\n          dataBounds.calcCurrentDataIndex(this.touchCrossPoint.x)\n          this.kline.tooltipChart.setCross(this.touchCrossPoint.y, true)\n          this.kline.freshen()\n        }\n      }\n    }\n  }\n\n  /**\n   * 触摸事件开始\n   * @param e\n   */\n  touchStart (e) {\n    if (e.targetTouches.length === 1) {\n      this.touchStartPoint = { x: e.targetTouches[0].clientX * 2, y: e.targetTouches[0].clientY * 2 }\n      this.touchMovePoint = { x: e.targetTouches[0].clientX * 2, y: e.targetTouches[0].clientY * 2 }\n      if (!this.isValidEvent(this.touchStartPoint)) {\n        return\n      }\n      if (this.touchMode === TOUCH_CROSS) {\n        e.preventDefault()\n        let crossRadius = this.distance(e.targetTouches[0].clientX * 2, this.touchCrossPoint.x, e.targetTouches[0].clientY * 2, this.touchCrossPoint.y)\n        if (crossRadius < 10) {\n          this.performCross(e)\n        } else {\n          this.touchMode = TOUCH_CROSS_CANCEL\n          this.kline.tooltipChart.setCross(0, false)\n          this.kline.freshen()\n        }\n      } else {\n        this.touchMode = TOUCH_NO\n      }\n      this.removeDelayActiveCross()\n      this.postDelayDelayActiveCross()\n    } else if (e.targetTouches.length > 1) {\n      if (!this.isValidEvent(this.touchStartPoint)) {\n        return\n      }\n      if (this.touchMode !== TOUCH_CROSS) {\n        e.preventDefault()\n        this.savedDist = this.spacing(e)\n        this.savedXDist = this.getXDist(e)\n        if (this.savedDist > 3) {\n          this.touchMode = TOUCH_ZOOM\n        }\n        this.touchRange = this.dataBounds.range\n        this.touchStartPosition = this.dataBounds.min\n      }\n    }\n  }\n\n  /**\n   * 触摸事件移动\n   * @param e\n   */\n  touchMove (e) {\n    if (!this.isValidEvent(this.touchStartPoint)) {\n      return\n    }\n    switch (this.touchMode) {\n      case TOUCH_ZOOM: {\n        e.preventDefault()\n        this.performZoom(e)\n        break\n      }\n      case TOUCH_DRAG: {\n        e.preventDefault()\n        this.performDrag(e)\n        break\n      }\n      case TOUCH_CROSS: {\n        e.preventDefault()\n        this.performCross(e)\n        break\n      }\n      case TOUCH_CROSS_CANCEL: {\n        this.removeDelayActiveCross()\n        break\n      }\n      case TOUCH_NO: {\n        let distance = Math.abs(this.distance(e.targetTouches[0].clientX * 2, this.touchStartPoint.x, e.targetTouches[0].clientY * 2, this.touchStartPoint.y))\n        if (distance > 10) {\n          let distanceX = Math.abs(e.targetTouches[0].clientX * 2 - this.touchStartPoint.x)\n          let distanceY = Math.abs(e.targetTouches[0].clientY * 2 - this.touchStartPoint.y)\n          if (distanceY <= distanceX) {\n            e.preventDefault()\n            this.kline.tooltipChart.setCross(0, false)\n            this.touchMode = TOUCH_DRAG\n            this.kline.freshen()\n          }\n        }\n        this.removeDelayActiveCross()\n      }\n    }\n  }\n\n  /**\n   * 触摸事件结束\n   * @param e\n   */\n  touchEnd (e) {\n    if (!this.isValidEvent(this.touchStartPoint)) {\n      return\n    }\n    if (e.targetTouches.length > 0) {\n      if (this.touchMode === TOUCH_CROSS) {\n        this.performCross(e)\n      } else {\n        this.touchMode = TOUCH_POST_ZOOM\n      }\n    } else {\n      this.removeDelayActiveCross()\n      if (this.touchMode !== TOUCH_CROSS) {\n        // 拿起\n        this.touchMode = TOUCH_NO\n        this.kline.tooltipChart.setCross(0, false)\n        this.kline.freshen()\n      }\n    }\n  }\n\n  /**\n   * 处理拖拽视图事件\n   * @param e\n   * @returns {boolean}\n   */\n  performDrag (e) {\n    // 左右滑动事件\n    let moveDist = e.targetTouches[0].clientX * 2 - this.touchMovePoint.x\n    if (moveDist < 0 - this.dataBounds.dataSpace / 2) {\n      if (this.dataBounds.min + this.dataBounds.range === this.dataBounds.dataList.length || this.dataBounds.dataList.length < this.dataBounds.range) {\n        return false\n      }\n\n      this.touchMovePoint.x = e.targetTouches[0].clientX * 2\n\n      let moveRange = +Math.abs(moveDist / this.dataBounds.dataSpace).toFixed(0)\n      if (moveRange === 0) {\n        moveRange = 1\n      }\n\n      this.dataBounds.min += moveRange\n      if (this.dataBounds.min >= this.dataBounds.dataList.length - this.dataBounds.range) {\n        this.dataBounds.min = this.dataBounds.dataList.length - this.dataBounds.range\n      }\n      this.kline.freshen()\n    } else if (moveDist > this.dataBounds.dataSpace / 2) {\n      if (this.dataBounds.min === 0 || this.dataBounds.dataList.length < this.dataBounds.range) {\n        return false\n      }\n\n      this.touchMovePoint.x = e.targetTouches[0].clientX * 2\n\n      let moveRange = +Math.abs(moveDist / this.dataBounds.dataSpace).toFixed(0)\n      if (moveRange === 0) {\n        moveRange = 1\n      }\n\n      this.dataBounds.min -= moveRange\n      if (this.dataBounds.min <= 0) {\n        this.dataBounds.min = 0\n      }\n      this.kline.freshen()\n    }\n  }\n\n  /**\n   * 处理缩放\n   * @param e\n   * @returns {boolean}\n   */\n  performZoom (e) {\n    if (e.targetTouches.length > 1) {\n      let totalDist = this.spacing(e)\n      if (totalDist > 10) {\n        let xDist = this.getXDist(e)\n        // x轴方向 scale\n        let scaleX = xDist / this.savedXDist\n\n        // 是否缩小\n        let isZoomingOut = scaleX < 1\n\n        if (isZoomingOut) {\n          if (this.dataBounds.range >= this.dataBounds.maxRange) {\n            // 无法继续缩小\n            return false\n          }\n        } else {\n          if (this.dataBounds.range <= this.dataBounds.minRange) {\n            // 无法继续放大\n            return false\n          }\n        }\n\n        // 计算缩放后的range大小\n        this.dataBounds.range = +(this.touchRange / scaleX).toFixed(0)\n\n        this.dataBounds.range = Math.min(Math.max(this.dataBounds.range, this.dataBounds.minRange), this.dataBounds.maxRange)\n\n        this.dataBounds.min = this.touchStartPosition + this.touchRange - this.dataBounds.range\n        if (this.dataBounds.min + this.dataBounds.range > this.dataBounds.dataList.length) {\n          this.dataBounds.min = 0\n        }\n        if (this.dataBounds.min < 0) {\n          this.dataBounds.min = 0\n        }\n        this.kline.freshen()\n      }\n    }\n  }\n\n  /**\n   * 处理移动光标\n   * @param e\n   * @returns {boolean}\n   */\n  performCross (e) {\n    this.touchCrossPoint = { x: e.targetTouches[0].clientX * 2, y: e.targetTouches[0].clientY * 2 }\n    this.dataBounds.calcCurrentDataIndex(this.touchCrossPoint.x)\n    this.kline.tooltipChart.setCross(this.touchCrossPoint.y, true)\n    this.kline.freshen()\n  }\n\n  /**\n   * 执行延迟事件\n   */\n  postDelayDelayActiveCross () {\n    this.delayTimeout = setTimeout(this.delayActiveCross, 200)\n  }\n\n  /**\n   * 移除延迟事件\n   */\n  removeDelayActiveCross () {\n    if (this.delayTimeout) {\n      clearTimeout(this.delayTimeout)\n      this.delayTimeout = null\n    }\n  }\n\n  /**\n   * 两点之间的距离\n   * @param eventX\n   * @param startX\n   * @param eventY\n   * @param startY\n   * @returns {*}\n   */\n  distance (eventX, startX, eventY, startY) {\n    let dx = eventX - startX\n    let dy = eventY - startY\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n\n  /**\n   * 计算移动距离\n   * @param e\n   * @returns {*}\n   */\n  spacing (e) {\n    if (e.targetTouches.length < 2) {\n      return 0\n    }\n    let x = Math.abs(e.targetTouches[0].clientX * 2 - e.targetTouches[1].clientX * 2)\n    let y = Math.abs(e.targetTouches[0].clientY * 2 - e.targetTouches[1].clientY * 2)\n    return Math.sqrt(x * x + y * y)\n  }\n\n  /**\n   * 获取两点间x的距离\n   * @param e\n   * @returns {number}\n   */\n  getXDist (e) {\n    return Math.abs(e.targetTouches[0].clientX * 2 - e.targetTouches[1].clientX * 2)\n  }\n}\n\nexport default TouchEvent\n","/**\n * 计算均线数据\n * @param data\n * @returns {*}\n */\nexport function calculationMa (data) {\n  let ma5Num = 0.0\n  let ma10Num = 0.0\n  let ma20Num = 0.0\n  let ma60Num = 0.0\n\n  let ma5\n  let ma10\n  let ma20\n  let ma60\n\n  let totalTurnover = 0.0\n  let totalVolume = 0.0\n\n  for (let i = 0; i < data.length; i++) {\n    totalVolume += data[i].volume\n    totalTurnover += (data[i].turnover || 0)\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let close = data[i].close\n    ma5Num += close\n    ma10Num += close\n    ma20Num += close\n    ma60Num += close\n    if (i < 5) {\n      ma5 = ma5Num / (i + 1)\n    } else {\n      ma5Num -= data[i - 5].close\n      ma5 = ma5Num / 5\n    }\n\n    if (i < 10) {\n      ma10 = ma10Num / (i + 1)\n    } else {\n      ma10Num -= data[i - 10].close\n      ma10 = ma10Num / 10\n    }\n\n    if (i < 20) {\n      ma20 = ma20Num / (i + 1)\n    } else {\n      ma20Num -= data[i - 20].close\n      ma20 = ma20Num / 20\n    }\n\n    if (i < 60) {\n      ma60 = ma60Num / (i + 1)\n    } else {\n      ma60Num -= data[i - 60].close\n      ma60 = ma60Num / 60\n    }\n    data[i].ma = { ma5, ma10, ma20, ma60 }\n  }\n  return data\n}\n\n/**\n * 计算成交量包含ma5、ma10、ma20\n *\n * @param data\n * @return\n */\nexport function calculationVol (data) {\n  let ma5s = 0\n  let ma10s = 0\n  let ma20s = 0\n  let ma5\n  let ma10\n  let ma20\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let num = data[i].volume\n    ma5s += num\n    ma10s += num\n    ma20s += num\n\n    if (i < 5) {\n      ma5 = ma5s / (i + 1)\n    } else {\n      ma5s -= data[i - 5].volume\n      ma5 = ma5s / 5\n    }\n\n    if (i < 10) {\n      ma10 = ma10s / (i + 1)\n    } else {\n      ma10s -= data[i - 10].volume\n      ma10 = ma10s / 10\n    }\n\n    if (i < 20) {\n      ma20 = ma20s / (i + 1)\n    } else {\n      ma20s -= data[i - 20].volume\n      ma20 = ma20s / 20\n    }\n    data[i].vol = { num, ma5, ma10, ma20 }\n  }\n  return data\n}\n\n/**\n * 计算MACD指标\n *\n * @param data\n * @return\n */\nexport function calculationMacd (data) {\n  // MACD：参数快线移动平均、慢线移动平均、移动平均，\n  // 参数值12、26、9。\n  // 公式：⒈首先分别计算出收盘价12日指数平滑移动平均线与26日指数平滑移动平均线，分别记为EMA(12）与EMA(26）。\n  // ⒉求这两条指数平滑移动平均线的差，即：DIFF=EMA（SHORT）－EMA（LONG）。\n  // ⒊再计算DIFF的M日的平均的指数平滑移动平均线，记为DEA。\n  // ⒋最后用DIFF减DEA，得MACD。MACD通常绘制成围绕零轴线波动的柱形图。MACD柱状大于0红色，小于0绿色。\n  let ema12\n  let ema26\n  let oldEma12 = 0\n  let oldEma26 = 0\n  let diff = 0\n  let dea = 0\n  let oldDea = 0\n  let macd = 0\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let closePrice = data[i].close\n    if (i > 0) {\n      ema12 = (2 * closePrice + 11 * oldEma12) / 13\n      ema26 = (2 * closePrice + 25 * oldEma26) / 27\n      diff = ema12 - ema26\n      dea = (diff * 2 + oldDea * 8) / 10\n      macd = (diff - dea) * 2\n      oldEma12 = ema12\n      oldEma26 = ema26\n      oldDea = dea\n    }\n    data[i].macd = { diff, dea, macd }\n  }\n  return data\n}\n\n/**\n * 计算BOLL指标\n *\n * @param data\n * @return\n */\nexport function calculationBoll (data) {\n  let closes26 = 0// MA\n  let closes25 = 0\n  let ma// 中轨线\n  let mb\n  let md// 标准差\n  let up// 上轨线\n  let dn// 下轨线\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let closePrice = data[i].close\n    closes26 += closePrice\n    closes25 += closePrice\n    if (i >= 24) {\n      mb = closes25 / 25\n      closes25 -= data[i - 24].close\n    } else {\n      mb = closes25 / (i + 1)\n    }\n    if (i >= 25) {\n      ma = closes26 / 26\n      md = getBollMd(data.slice(i - 25, i + 1), ma)\n      closes26 -= data[i - 25].close\n    } else {\n      ma = closes26 / (i + 1)\n      md = getBollMd(data.slice(0, i + 1), ma)\n    }\n    up = mb + 2 * md\n    dn = mb - 2 * md\n    data[i].boll = { up, mid: ma, dn }\n  }\n  return data\n}\n\n/**\n * 计算KDJ\n *\n * @param data\n * @return\n */\nexport function calculationKdj (data) {\n  let k\n  let d\n  let j\n\n  // n日内最低价\n  let ln\n  // n日内最高价\n  let hn\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    // n日收盘价\n    let cn = data[i].close\n\n    if (i < 8) {\n      ln = getLow(data.slice(0, i + 1))\n      hn = getHigh(data.slice(0, i + 1))\n    } else {\n      ln = getLow(data.slice(i - 8, i + 1))\n      hn = getHigh(data.slice(i - 8, i + 1))\n    }\n    let rsv = (cn - ln) / (hn - ln === 0 ? 1 : hn - ln) * 100\n    // 当日K值=2/3×前一日K值+1/3×当日RSV\n    // 当日D值=2/3×前一日D值+1/3×当日K值\n    // 若无前一日K 值与D值，则可分别用50来代替。\n    // J值=3*当日K值-2*当日D值\n    k = 2.0 / 3.0 * (i < 8 ? 50.0 : data[i - 1].kdj.k) + 1.0 / 3.0 * rsv\n    d = 2.0 / 3.0 * (i < 8 ? 50.0 : data[i - 1].kdj.d) + 1.0 / 3.0 * k\n    j = 3.0 * k - 2.0 * d\n    data[i].kdj = { k, d, j }\n  }\n  return data\n}\n\n/**\n * 计算RSI\n *\n * @param data\n * @return\n */\nexport function calculationRsi (data) {\n  // N日RSI =\n  // N日内收盘涨幅的平均值/(N日内收盘涨幅均值+N日内收盘跌幅均值) ×100%\n  let rsi1 = 0// 参数6\n  let rsi2 = 0// 参数12\n  let rsi3 = 0// 参数24\n\n  let sumCloseA = 0\n  let sumCloseB = 0\n\n  let a1\n  let b1\n  let oldA1 = 0\n  let oldB1 = 0\n\n  let a2\n  let b2\n  let oldA2 = 0\n  let oldB2 = 0\n\n  let a3\n  let b3\n  let oldA3 = 0\n  let oldB3 = 0\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    if (i > 0) {\n      let tmp = data[i].close - data[i - 1].close\n      if (tmp > 0) {\n        sumCloseA += tmp\n      } else {\n        sumCloseB += tmp\n      }\n      let AA = tmp > 0 ? tmp : 0\n      let BB = Math.abs(tmp)\n\n      if (i < 6) {\n        a1 = sumCloseA / (i + 1)\n        b1 = (Math.abs(sumCloseB) + sumCloseA) / (i + 1)\n      } else {\n        a1 = (AA + 5 * oldA1) / 6\n        b1 = (BB + 5 * oldB1) / 6\n      }\n      oldA1 = a1\n      oldB1 = b1\n      rsi1 = a1 / b1 * 100\n\n      if (i < 12) {\n        a2 = sumCloseA / (i + 1)\n        b2 = (Math.abs(sumCloseB) + sumCloseA) / (i + 1)\n      } else {\n        a2 = (AA + 11 * oldA2) / 12\n        b2 = (BB + 11 * oldB2) / 12\n      }\n      oldA2 = a2\n      oldB2 = b2\n      rsi2 = a2 / b2 * 100\n\n      if (i < 24) {\n        a3 = sumCloseA / (i + 1)\n        b3 = (Math.abs(sumCloseB) + sumCloseA) / (i + 1)\n      } else {\n        a3 = (AA + 23 * oldA3) / 24\n        b3 = (BB + 23 * oldB3) / 24\n      }\n      oldA3 = a3\n      oldB3 = b3\n      rsi3 = a3 / b3 * 100\n    }\n    data[i].rsi = { rsi1, rsi2, rsi3 }\n  }\n  return data\n}\n\n/**\n * 计算BIAS指标\n *\n * @param data\n * @return\n */\nexport function calculationBias (data) {\n  // 乖离率=[(当日收盘价-N日平均价)/N日平均价]*100%\n  // 参数：6，12、24\n  let bias1\n  let bias2\n  let bias3\n  let closes1 = 0\n  let closes2 = 0\n  let closes3 = 0\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let closePrice = data[i].close\n    closes1 += closePrice\n    closes2 += closePrice\n    closes3 += closePrice\n\n    if (i < 6) {\n      let mean6 = closes1 / (i + 1)\n      bias1 = ((closePrice - mean6) / mean6) * 100\n    } else {\n      closes1 -= data[i - 6].close\n      let mean6 = closes1 / 6\n      bias1 = ((closePrice - mean6) / mean6) * 100\n    }\n\n    if (i < 12) {\n      let mean12 = closes2 / (i + 1)\n      bias2 = ((closePrice - mean12) / mean12) * 100\n    } else {\n      closes2 -= data[i - 12].close\n      let mean12 = closes2 / 12\n      bias2 = ((closePrice - mean12) / mean12) * 100\n    }\n\n    if (i < 24) {\n      let mean24 = closes3 / (i + 1)\n      bias3 = ((closePrice - mean24) / mean24) * 100\n    } else {\n      closes3 -= data[i - 24].close\n      let mean24 = closes3 / 24\n      bias3 = ((closePrice - mean24) / mean24) * 100\n    }\n\n    data[i].bias = { bias1, bias2, bias3 }\n  }\n  return data\n}\n\n/**\n * 计算BRAR指标\n *\n * @param data\n * @return\n */\nexport function calculationBrar (data) {\n  // 参数是26。\n  // 公式N日BR=N日内（H－CY）之和除以N日内（CY－L）之和*100，\n  // 其中，H为当日最高价，L为当日最低价，CY为前一交易日的收盘价，N为设定的时间参数。\n  // N日AR=(N日内（H－O）之和除以N日内（O－L）之和)*100，\n  // 其中，H为当日最高价，L为当日最低价，O为当日开盘价，N为设定的时间参数\n  let br = 0\n  let ar = 0\n  let hcy = 0\n  let cyl = 0\n  let ho = 0\n  let ol = 0\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let highestPrice = data[i].high\n    let lowestPrice = data[i].low\n    let openPrice = data[i].open\n\n    ho += (highestPrice - openPrice)\n    ol += (openPrice - lowestPrice)\n\n    if (i > 25) {\n      ho -= (data[i - 26].high - data[i - 26].open)\n      ol -= (data[i - 26].open - data[i - 26].low)\n    }\n\n    if (ol !== 0) {\n      ar = ho / ol * 100\n    }\n\n    if (i > 0) {\n      let preClosePrice = data[i - 1].close\n      let highSubPreClose = highestPrice - preClosePrice\n      if (highSubPreClose < 0) {\n        highSubPreClose = 0\n      }\n      hcy += highSubPreClose\n      let preCloseSubLow = preClosePrice - lowestPrice\n      if (preCloseSubLow < 0) {\n        preCloseSubLow = 0\n      }\n      cyl += preCloseSubLow\n      if (cyl !== 0) {\n        br = hcy / cyl * 100\n      }\n    }\n    data[i].brar = { br, ar }\n  }\n  return data\n}\n\n/**\n * 计算CCI指标\n *\n * @param data\n * @return\n */\nexport function calculationCci (data) {\n  // 中价与 中价的N日内移动平均 的差 除以 N日内中价的平均绝对偏差\n  // 其中，中价等于最高价、最低价和收盘价之和除以3\n  // ={【79-（79+62+45+90+25）/5）】\n  // +【62-（79+62+45+90+25）/5）】\n  // +【45-（79+62+45+90+25）/5）】\n  // +【90-（79+62+45+90+25）/5）】\n  // +【25-（79+62+45+90+25）/5）】}/5\n  let TYPEs = 0\n  let cci\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let TYP = (data[i].high + data[i].low + data[i].close) / 3\n    TYPEs += TYP\n    if (i >= 13) {\n      let TYPEsMean = TYPEs / 14\n      TYPEs -= (data[i - 13].high + data[i - 13].low + data[i - 13].close) / 3\n\n      let types = 0\n      for (let j = i - 13; j < i + 1; j++) {\n        let typ = (data[j].high + data[j].low + data[j].close) / 3\n        types += Math.abs(typ - TYPEsMean)\n      }\n      let MD = types / 14\n      if (MD === 0) {\n        cci = 0\n      } else {\n        cci = 200 * (TYP - TYPEsMean) / 3 / MD\n      }\n    } else {\n      let TYPEsMean = TYPEs / (i + 1)\n      let types = 0\n      for (let j = 0; j < i + 1; j++) {\n        let typ = (data[j].high + data[j].low + data[j].close) / 3\n        types += Math.abs(typ - TYPEsMean)\n      }\n      let MD = types / (i + 1)\n      if (MD === 0) {\n        cci = 0\n      } else {\n        cci = 200 * (TYP - TYPEsMean) / 3 / MD\n      }\n    }\n    data[i].cci = { cci }\n  }\n  return data\n}\n\n/**\n * 计算DMI\n *\n * @param data\n * @return\n */\nexport function calculationDmi (data) {\n  // 参数 14，6\n  // MTR:=EXPMEMA(MAX(MAX(HIGH-LOW,ABS(HIGH-REF(CLOSE,1))),ABS(REF(CLOSE,1)-LOW)),N)\n  // HD :=HIGH-REF(HIGH,1);\n  // LD :=REF(LOW,1)-LOW;\n  // DMP:=EXPMEMA(IF(HD>0&&HD>LD,HD,0),N);\n  // DMM:=EXPMEMA(IF(LD>0&&LD>HD,LD,0),N);\n  //\n  // PDI: DMP*100/MTR;\n  // MDI: DMM*100/MTR;\n  // ADX: EXPMEMA(ABS(MDI-PDI)/(MDI+PDI)*100,MM);\n  // ADXR:EXPMEMA(ADX,MM);\n  // 公式含义：\n  // MTR赋值:最高价-最低价和最高价-昨收的绝对值的较大值和昨收-最低价的绝对值的较大值的N日指数平滑移动平均\n  // HD赋值:最高价-昨日最高价\n  // LD赋值:昨日最低价-最低价\n  // DMP赋值:如果HD>0并且HD>LD,返回HD,否则返回0的N日指数平滑移动平均\n  // DMM赋值:如果LD>0并且LD>HD,返回LD,否则返回0的N日指数平滑移动平均\n  // 输出PDI:DMP*100/MTR\n  // 输出MDI:DMM*100/MTR\n  // 输出ADX:MDI-PDI的绝对值/(MDI+PDI)*100的MM日指数平滑移动平均\n  // 输出ADXR:ADX的MM日指数平滑移动平均\n  let pdi = 0\n  let mdi = 0\n  let adx = 0\n  let adxr = 0\n\n  let HD\n  let LD\n  let refClose\n  let sumMax = []\n  let sumMaxDmp = []\n  let sumMaxDmm = []\n  let sumAdx = []\n  let sumAdxr = []\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    if (i > 0) {\n      refClose = data[i - 1].close\n      HD = data[i].high - data[i - 1].high\n      LD = data[i - 1].low - data[i].low\n\n      let max1 = data[i].high - data[i].low > Math.abs(data[i].high - refClose)\n        ? data[i].high - data[i].low\n        : Math.abs(data[i].high - refClose)\n      let max2 = max1 > Math.abs(refClose) - data[i].low\n        ? max1\n        : Math.abs(refClose) - data[i].low\n      sumMax.push(max2)\n\n      let H\n      if (HD > 0 && HD > LD) {\n        H = HD\n      } else {\n        H = 0\n      }\n      sumMaxDmp.push(H)\n\n      let L\n      if (LD > 0 && LD > HD) {\n        L = LD\n      } else {\n        L = 0\n      }\n      sumMaxDmm.push(L)\n\n      let sumMax1 = 0\n      let sumMaxDmp1 = 0\n      let sumMaxDmm1 = 0\n      for (let j = 0; j < sumMax.length; j++) {\n        sumMax1 += sumMax[j]\n        sumMaxDmp1 += sumMaxDmp[j]\n        sumMaxDmm1 += sumMaxDmm[j]\n      }\n      let mtr = sumMax1\n      let dmp = sumMaxDmp1\n      let dmm = sumMaxDmm1\n\n      pdi = dmp * 100 / mtr\n      mdi = dmm * 100 / mtr\n      let adxN1 = Math.abs((mdi - pdi)) / (mdi + pdi) * 100\n      sumAdx.push(adxN1)\n\n      let sum = 0\n      for (let j = 0; j < sumAdx.length; j++) {\n        sum += sumAdx[j]\n      }\n      adx = sum / 6\n      sumAdxr.push(adx)\n\n      let sum1 = 0\n      sum1 += sumAdxr[0]\n      sum1 += sumAdxr[sumAdxr.length - 1]\n      adxr = sum1 / 2\n\n      if (i >= 14) {\n        sumMax.remove(0)\n        sumMaxDmp.remove(0)\n        sumMaxDmm.remove(0)\n      }\n      if (i >= 19) {\n        sumAdx.remove(0)\n      }\n      if (i >= 25) {\n        sumAdxr.remove(0)\n      }\n    }\n    data[i].dmi = { pdi, mdi, adx, adxr }\n  }\n  return data\n}\n\n/**\n * 计算CR\n *\n * @param data\n * @return\n */\nexport function calculationCr (data) {\n  // 参数26、10、20、40、60\n  // MID:=REF(HIGH+LOW,1)/2;\n  // CR:SUM(MAX(0,HIGH-MID),N)/SUM(MAX(0,MID-LOW),N)*100;\n  // MA1:REF(MA(CR,M1),M1/2.5+1);\n  // MA2:REF(MA(CR,M2),M2/2.5+1);\n  // MA3:REF(MA(CR,M3),M3/2.5+1);\n  // MA4:REF(MA(CR,M4),M4/2.5+1);\n  // MID赋值:(昨日最高价+昨日最低价)/2\n  // 输出带状能量线:0和最高价-MID的较大值的N日累和/0和MID-最低价的较大值的N日累和*100\n  // 输出MA1:M1(5)/2.5+1日前的CR的M1(5)日简单移动平均\n  // 输出MA2:M2(10)/2.5+1日前的CR的M2(10)日简单移动平均\n  // 输出MA3:M3(20)/2.5+1日前的CR的M3(20)日简单移动平均\n  // 输出MA4:M4/2.5+1日前的CR的M4日简单移动平均\n  let cr = 0\n  let ma1\n  let ma2\n  let ma3\n  let ma4\n  let p1 = 0\n  let p2 = 0\n  let ma10Sum = 0\n  let ma10\n  let ma10List = []\n  let ma20Sum = 0\n  let ma20\n  let ma20List = []\n  let ma40Sum = 0\n  let ma40\n  let ma40List = []\n  let ma60Sum = 0\n  let ma60\n  let ma60List = []\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    if (i > 0) {\n      let preHighestPrice = data[i - 1].high\n      let preLowestPrice = data[i - 1].low\n      let preClosePrice = data[i - 1].close\n      let preOpenPrice = data[i - 1].open\n      let preMidPrice = (preHighestPrice + preClosePrice + preLowestPrice + preOpenPrice) / 4\n\n      let highestPrice = data[i].high\n      let lowestPrice = data[i].low\n\n      let highSubPreMid = highestPrice - preMidPrice\n      if (highSubPreMid < 0) {\n        highSubPreMid = 0\n      }\n      p1 += highSubPreMid\n\n      let preMidSubLow = preMidPrice - lowestPrice\n      if (preMidSubLow < 0) {\n        preMidSubLow = 0\n      }\n      p2 += preMidSubLow\n\n      if (i > 26) {\n        let firstHighestPrice = data[i - 27].high\n        let firstLowestPrice = data[i - 27].low\n        let firstClosePrice = data[i - 27].close\n        let firstOpenPrice = data[i - 27].open\n        let firstMidPrice = (firstHighestPrice + firstLowestPrice + firstClosePrice + firstOpenPrice) / 4\n\n        let secondHighestPrice = data[i - 26].high\n        let secondLowestPrice = data[i - 26].low\n\n        let secondHighSubFirstMid = secondHighestPrice - firstMidPrice\n        if (secondHighSubFirstMid < 0) {\n          secondHighSubFirstMid = 0\n        }\n\n        let firstMidSubSecondLow = firstMidPrice - secondLowestPrice\n        if (firstMidSubSecondLow < 0) {\n          firstMidSubSecondLow = 0\n        }\n        p1 -= secondHighSubFirstMid\n        p2 -= firstMidSubSecondLow\n      }\n\n      if (p2 !== 0) {\n        cr = p1 / p2 * 100\n      }\n\n      let YM = (data[i - 1].high + data[i - 1].low + data[i - 1].close) / 3\n      let HYM = data[i].high - YM\n      p1 += (HYM <= 0 ? 0 : HYM)\n      let LYM = YM - data[i].low\n      p2 += (LYM <= 0 ? 0 : LYM)\n    }\n    ma10Sum += cr\n    ma20Sum += cr\n    ma40Sum += cr\n    ma60Sum += cr\n\n    if (i < 10) {\n      ma10 = ma10Sum / (i + 1)\n    } else {\n      ma10Sum -= data[i - 10].cr.cr\n      ma10 = ma10Sum / 10\n    }\n    ma10List.push(ma10)\n\n    if (i < 20) {\n      ma20 = ma20Sum / (i + 1)\n    } else {\n      ma20Sum -= data[i - 20].cr.cr\n      ma20 = ma20Sum / 20\n    }\n    ma20List.push(ma20)\n\n    if (i < 40) {\n      ma40 = ma40Sum / (i + 1)\n    } else {\n      ma40Sum -= data[i - 40].cr.cr\n      ma40 = ma40Sum / 40\n    }\n    ma40List.push(ma40)\n\n    if (i < 60) {\n      ma60 = ma60Sum / (i + 1)\n    } else {\n      ma60Sum -= data[i - 60].cr.cr\n      ma60 = ma60Sum / 60\n    }\n    ma60List.push(ma60)\n\n    if (i < 5) {\n      ma1 = ma10List.get(0)\n    } else {\n      ma1 = ma10List[i - 5]\n    }\n\n    if (i < 9) {\n      ma2 = ma20List.get(0)\n    } else {\n      ma2 = ma20List[i - 9]\n    }\n\n    if (i < 17) {\n      ma3 = ma40List.get(0)\n    } else {\n      ma3 = ma40List[i - 17]\n    }\n\n    if (i < 25) {\n      ma4 = ma60List.get(0)\n    } else {\n      ma4 = ma60List[i - 25]\n    }\n    data[i].cr = { cr, ma1, ma2, ma3, ma4 }\n  }\n  return data\n}\n\n/**\n * 计算PSY\n *\n * @param data\n * @return\n */\nexport function calculationPsy (data) {\n  // PSY：参数是12。公式：PSY=N日内的上涨天数/N×100%。\n  let psy = 0\n  let upDay = 0\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    if (i > 0) {\n      upDay += (data[i].close - data[i - 1].close > 0 ? 1 : 0)\n      if (i >= 12) {\n        psy = upDay / 12 * 100\n        upDay -= (data[i - 11].close - data[i - 12].close > 0 ? 1 : 0)\n      } else {\n        psy = upDay / i * 100\n      }\n    }\n    data[i].psy = { psy }\n  }\n  return data\n}\n\n/**\n * 计算DMA\n *\n * @param data\n * @return\n */\nexport function calculationDma (data) {\n  // 参数是10、50、10。公式：DIF:MA(CLOSE,N1)-MA(CLOSE,N2);DIFMA:MA(DIF,M)\n  let dif\n  let difMa\n  let ma10s = 0\n  let ma10\n  let ma50s = 0\n  let ma50\n  let dif10s = 0\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let closePrice = data[i].close\n\n    ma10s += closePrice\n    ma50s += closePrice\n\n    if (i < 10) {\n      ma10 = ma10s / (i + 1)\n    } else {\n      ma10s -= data[i - 10].close\n      ma10 = ma10s / 10\n    }\n\n    if (i < 50) {\n      ma50 = ma50s / (i + 1)\n    } else {\n      ma50s -= data.get[i - 50].close\n      ma50 = ma50s / 50\n    }\n    dif = ma10 - ma50\n    dif10s += dif\n\n    if (i < 10) {\n      difMa = dif10s / (i + 1)\n    } else {\n      dif10s -= data[i - 10].dma.dif\n      difMa = dif10s / 10\n    }\n\n    data[i].dma = { dif, difMa }\n  }\n  return data\n}\n\n/**\n * 计算TRIX\n *\n * @param data\n * @return\n */\nexport function calculationTrix (data) {\n  // TR=收盘价的N日指数移动平均的N日指数移动平均的N日指数移动平均；\n  // TRIX=(TR-昨日TR)/昨日TR*100；\n  // MATRIX=TRIX的M日简单移动平均；\n  // 参数N设为12，参数M设为20；\n  // 参数12、20\n  // 公式：MTR:=EMA(EMA(EMA(CLOSE,N),N),N)\n  // TRIX:(MTR-REF(MTR,1))/REF(MTR,1)*100;\n  // TRMA:MA(TRIX,M)\n  let trix = 0\n  let maTrix\n  let sumTrix = 0\n\n  let sumClose = 0\n  let emaClose\n  let oldEmaClose = 0\n  let sumEmaClose = 0\n  let ema2\n  let oldEma2 = 0\n  let sumEma2 = 0\n  let ema3\n  let oldEma3 = 0\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let closePrice = data[i].close\n    sumClose += closePrice\n    if (i < 12) {\n      emaClose = sumClose / (i + 1)\n    } else {\n      emaClose = (closePrice * 2 + oldEmaClose * 11) / 13\n    }\n    oldEmaClose = emaClose\n    sumEmaClose += emaClose\n\n    if (i < 12) {\n      ema2 = sumEmaClose / (i + 1)\n    } else {\n      ema2 = (emaClose * 2 + oldEma2 * 11) / 13\n    }\n    oldEma2 = ema2\n    sumEma2 += ema2\n    if (i < 12) {\n      ema3 = sumEma2 / (i + 1)\n    } else {\n      ema3 = (ema2 * 2 + oldEma3 * 11) / 13\n    }\n    if (oldEma3 !== 0) {\n      trix = (ema3 - oldEma3) / oldEma3 * 100\n    }\n    sumTrix += trix\n    oldEma3 = ema3\n    if (i < 20) {\n      maTrix = sumTrix / (i + 1)\n    } else {\n      maTrix = sumTrix / 20\n      sumTrix -= data[i - 19].trix.trix\n    }\n    data[i].trix = { trix, maTrix }\n  }\n  return data\n}\n\n/**\n * 计算obv指标\n * 计算公式： V × [（C - L）- （H - C）]/（H - C）\n * V: 成交量, C: 收盘价， L: 最低价, H: 最高价\n * @param data\n * @return\n */\nexport function calculationObv (data) {\n  let sumObv = 0\n  let maObv\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let closePrice = data[i].close\n    let highestPrice = data[i].high\n    let highSubClose = highestPrice - closePrice\n    let obv = data[i].volume * (closePrice - data[i].low - highSubClose) / highestPrice\n    sumObv += obv\n    if (i < 30) {\n      maObv = sumObv / (i + 1)\n    } else {\n      sumObv = sumObv - data[i - 30].obv.obv\n      maObv = sumObv / 30\n    }\n    data[i].obv = { obv, maObv }\n  }\n  return data\n}\n\n/**\n * 计算vr指标\n * 默认参数24 ， 30\n * VR=（AVS+1/2CVS）/（BVS+1/2CVS）\n * 24天以来凡是股价上涨那一天的成交量都称为AV，将24天内的AV总和相加后称为AVS\n * 24天以来凡是股价下跌那一天的成交量都称为BV，将24天内的BV总和相加后称为BVS\n * 24天以来凡是股价不涨不跌，则那一天的成交量都称为CV，将24天内的CV总和相加后称为CVS\n * @param data\n * @return\n */\nexport function calculationVr (data) {\n  let avs = 0\n  let bvs = 0\n  let cvs = 0\n  let vr = 0\n  let maVr\n  let sumVr = 0\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    if (i < 24) {\n      let closePrice = data[i].close\n      let openPrice = data[i].open\n      let volume = data[i].volume\n      if (closePrice > openPrice) {\n        avs += volume\n      } else if (closePrice < openPrice) {\n        bvs += volume\n      } else {\n        cvs += volume\n      }\n    } else {\n      for (let j = i - 24; j < i; j++) {\n        let closePrice = data[j].close\n        let openPrice = data[j].open\n        let volume = data[j].volume\n        if (j === i - 24) {\n          avs = 0\n          bvs = 0\n          cvs = 0\n        }\n        if (closePrice > openPrice) {\n          avs += volume\n        } else if (closePrice < openPrice) {\n          bvs += volume\n        } else {\n          cvs += volume\n        }\n      }\n    }\n    let v = bvs + 1 / 2 * cvs\n    if (v !== 0) {\n      vr = (avs + 1 / 2 * cvs) / v * 100\n    }\n    sumVr += vr\n    if (i < 30) {\n      maVr = sumVr / (i + 1)\n    } else {\n      sumVr -= data[i - 30].vr.vr\n      maVr = sumVr / 30\n    }\n    data[i].vr = { vr, maVr }\n  }\n  return data\n}\n\n/**\n * 计算wr指标\n * 默认参数13 34 89\n * 公式 WR(N) = 100 * [ HIGH(N)-C ] / [ HIGH(N)-LOW(N) ]\n * @param data\n * @return\n */\nexport function calculationWr (data) {\n  let wr1 = 0\n  let wr2 = 0\n  let wr3 = 0\n  let wr1HighestPrice = Number.MIN_VALUE\n  let wr1LowestPrice = Number.MAX_VALUE\n  let wr2HighestPrice = Number.MIN_VALUE\n  let wr2LowestPrice = Number.MAX_VALUE\n  let wr3HighestPrice = Number.MIN_VALUE\n  let wr3LowestPrice = Number.MAX_VALUE\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let closePrice = data[i].close\n    if (i < 13) {\n      let highPrice = data[i].high\n      let lowPrice = data[i].low\n      wr1HighestPrice = Math.max(highPrice, wr1HighestPrice)\n      wr1LowestPrice = Math.min(lowPrice, wr1LowestPrice)\n      wr2HighestPrice = Math.max(highPrice, wr2HighestPrice)\n      wr2LowestPrice = Math.min(lowPrice, wr2LowestPrice)\n      wr3HighestPrice = Math.max(highPrice, wr3HighestPrice)\n      wr3LowestPrice = Math.min(lowPrice, wr3LowestPrice)\n      let highSubLow = wr1HighestPrice - wr1LowestPrice\n      if (highSubLow !== 0) {\n        wr1 = (wr1HighestPrice - closePrice) / highSubLow * 100\n      }\n      wr2 = wr1\n      wr3 = wr1\n    } else {\n      for (let j = i - 13; j < i; j++) {\n        if (j === i - 13) {\n          wr1HighestPrice = data[j].high\n          wr1LowestPrice = data[j].low\n        } else {\n          wr1HighestPrice = Math.max(data[j].high, wr1HighestPrice)\n          wr1LowestPrice = Math.min(data[j].low, wr1LowestPrice)\n        }\n        let highSubLow = wr1HighestPrice - wr1LowestPrice\n        if (highSubLow !== 0) {\n          wr1 = (wr1HighestPrice - closePrice) / highSubLow * 100\n        }\n      }\n      if (i < 34) {\n        let highPrice = data[i].high\n        let lowPrice = data[i].low\n        wr2HighestPrice = Math.max(highPrice, wr2HighestPrice)\n        wr2LowestPrice = Math.min(lowPrice, wr2LowestPrice)\n        wr3HighestPrice = Math.max(highPrice, wr3HighestPrice)\n        wr3LowestPrice = Math.min(lowPrice, wr3LowestPrice)\n        let highSubLow = wr2HighestPrice - wr2LowestPrice\n        if (highSubLow !== 0) {\n          wr2 = (wr2HighestPrice - closePrice) / highSubLow * 100\n        }\n        wr3 = wr2\n      } else {\n        for (let j = i - 34; j < i; j++) {\n          if (j === i - 34) {\n            wr2HighestPrice = data[j].high\n            wr2LowestPrice = data[j].low\n          } else {\n            wr2HighestPrice = Math.max(data[j].high, wr2HighestPrice)\n            wr2LowestPrice = Math.min(data[j].low, wr2LowestPrice)\n          }\n          let highSubLow = wr2HighestPrice - wr2LowestPrice\n          if (highSubLow !== 0) {\n            wr2 = (wr2HighestPrice - closePrice) / highSubLow * 100\n          }\n        }\n        if (i < 89) {\n          let highPrice = data[i].high\n          let lowPrice = data[i].low\n          wr3HighestPrice = Math.max(highPrice, wr3HighestPrice)\n          wr3LowestPrice = Math.min(lowPrice, wr3LowestPrice)\n          let highSubLow = wr3HighestPrice - wr3LowestPrice\n          if (highSubLow !== 0) {\n            wr3 = (wr3HighestPrice - closePrice) / highSubLow * 100\n          }\n        } else {\n          for (let j = i - 89; j < i; j++) {\n            if (j === i - 89) {\n              wr3HighestPrice = data[j].high\n              wr3LowestPrice = data[j].low\n            } else {\n              wr3HighestPrice = Math.max(data[j].high, wr3HighestPrice)\n              wr3LowestPrice = Math.min(data[j].low, wr3LowestPrice)\n            }\n            let highSubLow = wr3HighestPrice - wr3LowestPrice\n            if (highSubLow !== 0) {\n              wr3 = (wr3HighestPrice - closePrice) / highSubLow * 100\n            }\n          }\n        }\n      }\n    }\n    data[i].wr = { wr1, wr2, wr3 }\n  }\n  return data\n}\n\n/**\n * 计算mtm指标\n * 默认参数6 10\n * 公式 MTM（N日）=C－CN\n * @param data\n * @return\n */\nexport function calculationMtm (data) {\n  let mtm\n  let mtmSum = 0\n  let mtmMa\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    let closePrice = data[i].close\n    if (i < 6) {\n      mtm = closePrice - data[0].close\n    } else {\n      mtm = closePrice - data[i - 6].close\n    }\n    mtmSum += mtm\n    if (i < 10) {\n      mtmMa = mtmSum / (i + 1)\n    } else {\n      mtmSum -= data[i - 10].mtm.mtm\n      mtmMa = mtmSum / 10\n    }\n    data[i].mtm = { mtm, mtmMa }\n  }\n  return data\n}\n\n/**\n * 简易波动指标\n * 默认参数N为14，参数M为9\n * 公式：\n * A=（今日最高+今日最低）/2\n * B=（前日最高+前日最低）/2\n * C=今日最高-今日最低\n * EM=（A-B）*C/今日成交额\n * EMV=N日内EM的累和\n * MAEMV=EMV的M日的简单移动平均\n * @param data\n * @return\n */\nexport function calculationEmv (data) {\n  let emv = 0\n  let maEmv\n  let sumEmv = 0\n  let em = 0\n\n  let emList = []\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    if (i > 0) {\n      let highestPrice = data[i].high\n      let lowestPrice = data[i].low\n      let preHighestPrice = data[i - 1].high\n      let preLowestPrice = data[i - 1].low\n      let highSubLow = highestPrice - lowestPrice\n      let halfHighAddLow = (highestPrice + lowestPrice) / 2\n      let preHalfHighAddLow = (preHighestPrice + preLowestPrice) / 2\n      em = (halfHighAddLow - preHalfHighAddLow) * highSubLow / turnover\n    }\n    emList.push(em)\n    if (i < 14) {\n      emv += em\n    } else {\n      emv -= emList[i - 14]\n    }\n    sumEmv += emv\n    if (i < 9) {\n      maEmv = sumEmv / (i + 1)\n    } else {\n      sumEmv -= data[i - 9].emv.emv\n      maEmv = sumEmv / 9\n    }\n    data[i].emv = { emv, maEmv }\n  }\n  return data\n}\n\n/**\n * 计算sar\n * @param data\n * @return\n */\nexport function calculationSar (data) {\n  // 加速因子\n  let af = 0\n  // 极值\n  let ep = -100\n  // 判断是上涨还是下跌  false：下跌\n  let isIncreasing = false\n  let sar = 0\n\n  let totalTurnover = 0\n  let totalVolume = 0\n\n  for (let i = 0; i < data.length; i++) {\n    let turnover = data[i].turnover\n    totalVolume += data[i].volume\n    totalTurnover += turnover\n    if (totalVolume !== 0) {\n      data[i].averagePrice = totalTurnover / totalVolume\n    }\n\n    // 上一个周期的sar\n    let preSar = sar\n    let highestPrice = data[i].high\n    let lowestPrice = data[i].low\n    if (isIncreasing) {\n      // 上涨\n      if (ep === -100 || ep < highestPrice) {\n        // 重新初始化值\n        ep = highestPrice\n        af = Math.min(af + 0.02, 2)\n      }\n      sar = preSar + af * (ep - preSar)\n      let lowestPriceMin = Math.min(data[Math.max(1, i) - 1].low, lowestPrice)\n      if (sar > data[i].low) {\n        sar = ep\n        // 重新初始化值\n        af = 0\n        ep = -100\n        isIncreasing = !isIncreasing\n      } else if (sar > lowestPriceMin) {\n        sar = lowestPriceMin\n      }\n    } else {\n      if (ep === -100 || ep > lowestPrice) {\n        // 重新初始化值\n        ep = lowestPrice\n        af = Math.min(af + 0.02, 0.2)\n      }\n      sar = preSar + af * (ep - preSar)\n      let highestPriceMax = Math.max(data[Math.max(1, i) - 1].high, highestPrice)\n      if (sar < data[i].high) {\n        sar = ep\n        // 重新初始化值\n        af = 0\n        ep = -100\n        isIncreasing = !isIncreasing\n      } else if (sar < highestPriceMax) {\n        sar = highestPriceMax\n      }\n    }\n    data[i].sar = { sar }\n  }\n  return data\n}\n\n/**\n * 计算布林指标中的标准差\n *\n * @param list\n * @param ma\n * @return\n */\nfunction getBollMd (list, ma) {\n  let sum = 0\n  for (let i = 0; i < list.length; i++) {\n    let closeMa = list[i].close - ma\n    sum += closeMa * closeMa\n  }\n  let b = sum > 0\n  sum = Math.abs(sum)\n  let md = Math.sqrt(sum / list.length)\n  return b ? md : -1 * md\n}\n\n/**\n * 获取list中的最大的最高价\n *\n * @param list\n * @return\n */\nfunction getHigh (list) {\n  let high = 0\n  if (list && list.length > 0) {\n    let size = list.length\n    high = list[0].high\n    for (let i = 1; i < size; i++) {\n      high = Math.max(list[i].high, high)\n    }\n  }\n  return high\n}\n\n/**\n * 获取list中的最小的最低价\n *\n * @param list\n * @return\n */\nfunction getLow (list) {\n  let low = 0\n  if (list && list.length > 0) {\n    let size = list.length\n    low = list[0].low\n    for (let i = 1; i < size; i++) {\n      low = Math.min(list[i].low, low)\n    }\n  }\n  return low\n}\n","import ViewPortHandler from '../internal/ViewPortHandler'\nimport DataBounds from '../internal/DataBounds'\nimport GridChart from './GridChart'\nimport CandleChart from './CandleChart'\nimport IndicatorChart from './IndicatorChart'\nimport XAxisChart from './XAxisChart'\nimport TooltipChart from './TooltipChart'\nimport YAxis, { YAxisPosition } from '../component/YAxis'\nimport XAxis from '../component/XAxis'\nimport Candle from '../component/Candle'\nimport Indicator, { IndicatorType } from '../component/Indicator'\nimport Tooltip from '../component/Tooltip'\nimport Grid from '../component/Grid'\n\nimport MouseEvent from '../internal/event/MouseEvent'\nimport TouchEvent from '../internal/event/TouchEvent'\nimport * as IndicatorCalculation from '../utils/indicatorCalculation'\n\nconst isMobile = /Android|webOS|iPhone|iPod|BlackBerry|UCBrowser/i.test(navigator.userAgent)\n\nclass KLineChart {\n  constructor (dom) {\n    this.rootDom = dom\n    this.domWidth = 0\n    this.domHeight = 0\n    this.canvas = null\n    this.canvasDom = null\n    this.viewPortHandler = new ViewPortHandler()\n    this.dataBounds = new DataBounds(this.viewPortHandler)\n    this.grid = new Grid()\n    this.yAxis = new YAxis()\n    this.xAxis = new XAxis()\n    this.candle = new Candle()\n    this.indicator = new Indicator()\n    this.tooltip = new Tooltip()\n    this.gridChart = new GridChart(this.grid, this.dataBounds, this.viewPortHandler)\n    this.candleChart = new CandleChart(this.candle, this.indicator, this.yAxis, this.dataBounds, this.viewPortHandler)\n    this.volChart = new IndicatorChart(this.indicator, this.xAxis, this.yAxis, this.dataBounds, this.viewPortHandler, IndicatorType.VOL)\n    this.indicatorChart = new IndicatorChart(this.indicator, this.xAxis, this.yAxis, this.dataBounds, this.viewPortHandler)\n    this.xAxisChart = new XAxisChart(this.xAxis, this.dataBounds, this.viewPortHandler)\n    this.tooltipChart = new TooltipChart(\n      this.tooltip,\n      this.candle,\n      this.indicator,\n      this.yAxis,\n      this.candleChart,\n      this.volChart,\n      this.indicatorChart,\n      this.dataBounds,\n      this.viewPortHandler\n    )\n    this.motionEvent = isMobile\n      ? new TouchEvent(this, this.dataBounds, this.viewPortHandler)\n      : new MouseEvent(this, this.dataBounds, this.viewPortHandler)\n    // 是否需要计算整个绘图区域的尺寸\n    this.isShouldCalcOffset = true\n    // 是否需要计算图的高度\n    this.isShouldCalcChartHeight = true\n    this.init()\n  }\n\n  /**\n   * 初始化\n   * @param dom\n   */\n  init () {\n    this.canvasDom = document.createElement('canvas')\n    try {\n      if (isMobile) {\n        this.canvasDom.addEventListener('touchstart', (e) => { this.motionEvent.touchStart(e) }, false)\n        this.canvasDom.addEventListener('touchmove', (e) => { this.motionEvent.touchMove(e) }, false)\n        this.canvasDom.addEventListener('touchend', (e) => { this.motionEvent.touchEnd(e) }, false)\n      } else {\n        this.canvasDom.addEventListener('mousedown', (e) => { this.motionEvent.mouseDown(e) })\n        this.canvasDom.addEventListener('mouseup', (e) => { this.motionEvent.mouseUp(e) })\n        this.canvasDom.addEventListener('mousemove', (e) => { this.motionEvent.mouseMove(e) })\n        this.canvasDom.addEventListener('mouseleave', (e) => { this.motionEvent.mouseLeave(e) })\n        // IE9, Chrome, Safari, Opera\n        this.canvasDom.addEventListener('mousewheel', (e) => { this.motionEvent.mouseWheel(e) }, false)\n        // Firefox\n        this.canvasDom.addEventListener('DOMMouseScroll', (e) => { this.motionEvent.mouseWheel(e) }, false)\n      }\n    } catch (e) {}\n    this.rootDom.appendChild(this.canvasDom)\n    this.resize()\n  }\n\n  /**\n   * 改变尺寸\n   */\n  resize () {\n    this.isShouldCalcOffset = true\n    this.domWidth = this.rootDom.offsetWidth * 2\n    this.domHeight = this.rootDom.offsetHeight * 2\n    this.canvasDom.style.width = this.rootDom.offsetWidth + 'px'\n    this.canvasDom.style.height = this.rootDom.offsetHeight + 'px'\n    this.freshen()\n  }\n\n  /**\n   * 设置配置\n   * @param config\n   */\n  setConfig (config) {\n    if (config) {\n      let common = config.common\n      if (common) {\n        if (common.minVisibleRange > 0) {\n          this.dataBounds.minRange = common.minVisibleRange\n        }\n        if (common.maxVisibleRange > 0 && common.maxVisibleRange > this.dataBounds.minRange) {\n          this.dataBounds.maxRange = common.maxVisibleRange\n        }\n        if (common.defaultVisibleRange > 0 &&\n          common.defaultVisibleRange > this.dataBounds.minRange - 1 &&\n          common.defaultVisibleRange < this.dataBounds.maxRange + 1) {\n          this.dataBounds.range = common.defaultVisibleRange\n        }\n      }\n      let grid = config.grid\n      if (grid) {\n        this.grid.display = grid.display\n        if (grid.lineSize > 0) {\n          this.grid.lineSize = grid.lineSize\n        }\n        if (grid.lineColor) {\n          this.grid.lineColor = grid.lineColor\n        }\n      }\n      let candle = config.candle\n      if (candle) {\n        if (candle.chartType) {\n          this.candle.chartStyle = candle.chartType\n        }\n        if (candle.timeChart) {\n          this.candle.timeChart = { ...this.candle.timeChart, ...candle.timeChart }\n        }\n        if (candle.candleChart) {\n          this.candle.candleChart = { ...this.candle.candleChart, ...candle.candleChart }\n        }\n        if (candle.lowestHighestPriceMarkTextColor) {\n          this.candle.lowestHighestPriceMarkTextColor = candle.lowestHighestPriceMarkTextColor\n        }\n        if (candle.lowestHighestPriceMarkTextSize > 0) {\n          this.candle.lowestHighestPriceMarkTextSize = candle.lowestHighestPriceMarkTextSize\n        }\n        this.candle.lowestHighestValueFormatter = candle.lowestHighestValueFormatter\n        if (candle.highestPriceMark) {\n          this.candle.highestPriceMark = { ...this.candle.highestPriceMark, ...candle.highestPriceMark }\n        }\n        if (candle.lowestPriceMark) {\n          this.candle.lowestPriceMark = { ...this.candle.lowestPriceMark, ...candle.lowestPriceMark }\n        }\n        if (candle.lastPriceMark) {\n          this.candle.lastPriceMark = { ...this.candle.lastPriceMark, ...candle.lastPriceMark }\n        }\n      }\n      let indicator = config.indicator\n      if (indicator) {\n        if (indicator.lineSize > 0) {\n          this.indicator.lineSize = indicator.lineSize\n        }\n        if (indicator.increasingColor) {\n          this.indicator.increasingColor = indicator.increasingColor\n        }\n        if (indicator.decreasingColor) {\n          this.indicator.decreasingColor = indicator.decreasingColor\n        }\n        if (indicator.lineColors && indicator.lineColors.length > 4) {\n          this.indicator.lineColors = indicator.lineColors\n        }\n      }\n      let xAxis = config.xAxis\n      if (xAxis) {\n        this.xAxis.display = xAxis.display\n        if (this.xAxis.color) {\n          this.xAxis.color = xAxis.color\n        }\n        if (xAxis.minHeight >= 0) {\n          this.xAxis.xAxisMinHeight = xAxis.minHeight\n        }\n        if (xAxis.maxHeight >= 0 && xAxis.maxHeight >= this.xAxis.xAxisMinHeight) {\n          this.xAxis.xAxisMaxHeight = xAxis.maxHeight\n        }\n        if (xAxis.axisLine) {\n          this.xAxis.axisLine = { ...this.xAxis.axisLine, ...xAxis.axisLine }\n        }\n        if (xAxis.tickText) {\n          this.xAxis.tickText = { ...this.xAxis.tickText, ...xAxis.tickText }\n        }\n        if (xAxis.tickLine) {\n          this.xAxis.tickLine = { ...this.xAxis.tickLine, ...xAxis.tickLine }\n        }\n        if (xAxis.separatorLine) {\n          this.xAxis.separatorLine = { ...this.xAxis.separatorLine, ...xAxis.separatorLine }\n        }\n      }\n      let yAxis = config.yAxis\n      if (yAxis) {\n        this.yAxis.display = yAxis.display\n        if (yAxis.position) {\n          this.yAxis.yAxisPosition = yAxis.position\n          this.isShouldCalcOffset = true\n        }\n        if (this.yAxis.color) {\n          this.yAxis.color = yAxis.color\n        }\n        if (yAxis.minWidth >= 0) {\n          this.yAxis.yAxisMinWidth = yAxis.minWidth\n        }\n        if (yAxis.maxWidth >= 0 && yAxis.maxWidth >= this.yAxis.yAxisMinWidth) {\n          this.yAxis.yAxisMaxWidth = yAxis.maxWidth\n        }\n        if (yAxis.axisLine) {\n          this.yAxis.axisLine = { ...this.yAxis.axisLine, ...yAxis.axisLine }\n        }\n        if (yAxis.tickText) {\n          this.yAxis.tickText = { ...this.yAxis.tickText, ...yAxis.tickText }\n          this.isShouldCalcOffset = true\n        }\n        if (yAxis.tickLine) {\n          this.yAxis.tickLine = { ...this.yAxis.tickLine, ...yAxis.tickLine }\n        }\n        if (yAxis.separatorLine) {\n          this.yAxis.separatorLine = { ...this.yAxis.separatorLine, ...yAxis.separatorLine }\n        }\n      }\n      let tooltip = config.tooltip\n      if (tooltip) {\n        if (tooltip.textSize > 0) {\n          this.tooltip.textSize = tooltip.textSize\n        }\n        if (tooltip.crossLine) {\n          if (tooltip.crossLine.text) {\n            tooltip.crossLine.text = { ...this.tooltip.crossLine.text, ...tooltip.crossLine.text }\n          }\n          this.tooltip.crossLine = { ...this.tooltip.crossLine, ...tooltip.crossLine }\n        }\n        if (tooltip.generalData) {\n          if (tooltip.generalData.text) {\n            tooltip.generalData.text = { ...this.tooltip.generalData.text, ...tooltip.generalData.text }\n          }\n          this.tooltip.generalData = { ...this.tooltip.generalData, ...tooltip.generalData }\n        }\n        if (tooltip.indicatorData) {\n          if (tooltip.indicatorData.text) {\n            tooltip.indicatorData.text = { ...this.tooltip.indicatorData.text, ...tooltip.indicatorData.text }\n          }\n          this.tooltip.indicatorData = { ...this.tooltip.indicatorData, ...tooltip.indicatorData }\n        }\n      }\n      this.freshen()\n    }\n  }\n\n  /**\n   * 计算图表高度\n   */\n  calcChartHeight (domHeight) {\n    let xChartHeight = this.xAxis.getRequiredHeightSpace()\n    let chartHeight = domHeight - xChartHeight\n    let isDisplayVolChart = this.isDisplayVolChart()\n    let isDisplayIndicatorChart = this.isDisplayIndicatorChart()\n    let volChartHeight = 0\n    let indicatorChartHeight = 0\n\n    if (isDisplayVolChart && isDisplayIndicatorChart) {\n      let height = chartHeight * 0.2\n      volChartHeight = height\n      indicatorChartHeight = height\n    } else if (isDisplayVolChart && !isDisplayIndicatorChart) {\n      volChartHeight = chartHeight * 0.3\n    } else if (!isDisplayVolChart && isDisplayIndicatorChart) {\n      indicatorChartHeight = chartHeight * 0.3\n    }\n\n    let candleChartHeight = chartHeight - volChartHeight - indicatorChartHeight\n    let contentTop = 0\n    this.candleChart.setChartDimens(candleChartHeight, contentTop)\n\n    contentTop += candleChartHeight\n    this.volChart.setChartDimens(volChartHeight, contentTop)\n\n    contentTop += volChartHeight\n    this.indicatorChart.setChartDimens(indicatorChartHeight, contentTop)\n\n    contentTop += indicatorChartHeight\n    this.xAxisChart.setChartDimens(xChartHeight, contentTop)\n  }\n\n  /**\n   * 计算不包括x轴y轴的绘制区域的尺寸\n   */\n  calcOffsets () {\n    let offsetLeft = 0\n    let offsetRight = 0\n    let offsetTop = 0\n    let offsetBottom = 0\n    if (this.yAxis.needsOffset()) {\n      // 计算y轴最大宽度\n      let yAxisRequireWidthSpace = this.yAxis.getRequiredWidthSpace()\n      if (this.yAxis.yAxisPosition === YAxisPosition.LEFT) {\n        offsetLeft += yAxisRequireWidthSpace\n      } else {\n        offsetRight += yAxisRequireWidthSpace\n      }\n    }\n\n    let requireXAxisHeight = this.xAxis.getRequiredHeightSpace()\n    offsetBottom += requireXAxisHeight\n\n    this.viewPortHandler.restrainViewPort(\n      offsetLeft, offsetTop, offsetRight, offsetBottom\n    )\n  }\n\n  /**\n   * 刷新\n   */\n  freshen () {\n    this.canvasDom.width = this.domWidth\n    this.canvasDom.height = this.domHeight\n    this.canvas = this.canvasDom.getContext('2d')\n    if (this.isShouldCalcChartHeight) {\n      this.calcChartHeight(this.domHeight)\n      this.isShouldCalcChartHeight = false\n    }\n    if (this.isShouldCalcOffset) {\n      this.viewPortHandler.setChartDimens(this.domWidth, this.domHeight)\n      this.calcOffsets()\n      this.isShouldCalcOffset = false\n    }\n    this.draw()\n  }\n\n  /**\n   * 绘制\n   */\n  draw () {\n    this.dataBounds.space()\n    this.gridChart.draw(this.canvas)\n    this.xAxisChart.draw(this.canvas)\n    this.candleChart.draw(this.canvas)\n    this.volChart.draw(this.canvas)\n    this.indicatorChart.draw(this.canvas)\n    this.tooltipChart.draw(this.canvas)\n  }\n\n  /**\n   * 计算指标数据\n   * @param indicatorType Int\n   */\n  calcIndicator (indicatorType) {\n    switch (indicatorType) {\n      case IndicatorType.MA: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationMa(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.MACD: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationMacd(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.VOL: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationVol(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.BOLL: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationBoll(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.BIAS: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationBias(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.BRAR: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationBrar(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.CCI: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationCci(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.CR: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationCr(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.DMA: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationDma(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.DMI: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationDmi(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.KDJ: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationKdj(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.KD: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationKdj(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.RSI: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationRsi(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.PSY: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationPsy(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.TRIX: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationTrix(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.OBV: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationObv(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.VR: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationVr(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.WR: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationWr(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.MTM: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationMtm(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.EMV: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationEmv(this.dataBounds.dataList)\n        break\n      }\n      case IndicatorType.SAR: {\n        this.dataBounds.dataList = IndicatorCalculation.calculationSar(this.dataBounds.dataList)\n        break\n      }\n    }\n  }\n\n  /**\n   * 计算各图指标\n   */\n  calcChartIndicator () {\n    if (this.candleChart.isDisplayChart()) {\n      this.calcIndicator(this.candleChart.indicatorType)\n    }\n    if (this.isDisplayVolChart()) {\n      this.calcIndicator(IndicatorType.VOL)\n    }\n    if (this.isDisplayIndicatorChart()) {\n      this.calcIndicator(this.indicatorChart.indicatorType)\n    }\n    this.freshen()\n  }\n\n  /**\n   * 设置数据\n   * @param dataList\n   */\n  setDataList (dataList) {\n    this.dataBounds.dataList = dataList\n    this.dataBounds.moveToLast()\n    this.calcChartIndicator()\n    this.freshen()\n  }\n\n  /**\n   * 设置主指标类型\n   * @param indicatorType\n   */\n  setMainIndicatorType (indicatorType) {\n    if (this.candleChart.indicatorType !== indicatorType) {\n      this.candleChart.indicatorType = indicatorType\n      this.calcIndicator(indicatorType)\n      this.freshen()\n    }\n  }\n\n  /**\n   * 设置副指标类型\n   * @param indicatorType\n   */\n  setSubIndicatorType (indicatorType) {\n    if (this.indicatorChart.indicatorType !== indicatorType) {\n      let shouldCalcChartHeight = (this.isDisplayIndicatorChart() && indicatorType === IndicatorType.NO) ||\n        (!this.isDisplayIndicatorChart() && indicatorType !== IndicatorType.NO)\n      this.indicatorChart.indicatorType = indicatorType\n      if (shouldCalcChartHeight) {\n        this.isShouldCalcChartHeight = true\n      }\n      this.calcIndicator(indicatorType)\n      this.freshen()\n    }\n  }\n\n  /**\n   * 设置是否显示vol指标\n   * @param isShow Boolean\n   */\n  setShowVolIndicatorChart (isShow) {\n    if (this.isDisplayVolChart() !== isShow) {\n      if (isShow) {\n        this.volChart.indicatorType = IndicatorType.VOL\n        this.calcIndicator(IndicatorType.VOL)\n      } else {\n        this.volChart.indicatorType = IndicatorType.NO\n      }\n      this.isShouldCalcChartHeight = true\n      this.freshen()\n    }\n  }\n\n  isDisplayVolChart () {\n    return this.volChart.isDisplayChart()\n  }\n\n  isDisplayIndicatorChart () {\n    return this.indicatorChart.isDisplayChart()\n  }\n}\n\nexport default KLineChart\n","import KLineChart from './chart/KLineChart'\nimport { LineStyle } from './component/Component'\nimport { ChartStyle, CandleStyle } from './component/Candle'\nimport { IndicatorType } from './component/Indicator'\nimport { YAxisTextPosition, YAxisPosition } from './component/YAxis'\nimport { IndicatorDisplayRule } from './component/Tooltip'\n\nexport { LineStyle, ChartStyle, CandleStyle, IndicatorType, YAxisTextPosition, YAxisPosition, IndicatorDisplayRule }\n\nconst kline = {\n  init (dom) {\n    return new KLineChart(dom)\n  }\n}\nexport default kline\n"],"sourceRoot":""}